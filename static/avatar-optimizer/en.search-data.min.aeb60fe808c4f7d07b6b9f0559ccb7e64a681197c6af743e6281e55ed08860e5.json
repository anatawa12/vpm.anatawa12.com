[{"id":0,"href":"/avatar-optimizer/en/docs/tutorial/","title":"Tutorial","section":"Docs","content":""},{"id":1,"href":"/avatar-optimizer/en/docs/basic-concept/","title":"Basic Concepts","section":"Docs","content":" Basic Concepts of Avatar Optimizer # This page describes the basic concepts of Avatar Optimizer.\nWhat is Avatar Optimizer? # Avatar Optimizer is a tool that helps you optimize your avatar. This tool is initially designed for VRChat avatars, but it might be usable for other Avatars supported by NDMF.\nNon-VRChat avatar support is completely community-based and may not be supported by the Avatar Optimizer dev team.\nWhat is the goal of Avatar Optimizer? # This tool is designed to help you optimize your avatar in performance without affecting the appearance so much.\nTherefore, it is not intended to make changes of the avatar behavior.\nAll non-configured changes in the avatar behavior is treated as a bug, even if it might be useful in some use cases.\nIn some cases, we may put off the bug since it does not affect so much for most use cases.\nHowever, the buggy behavior may not be considered in other components.\nFor example, AAO Merge Skinned Mesh component in 1.7.x or older merges BlendShapes which have the same name.\nThis behavior is treated as a bug since this makes impossible to animate them separately.\nYou may use this bug to sync the BlendShape animation of an Skinned Mesh Renderer with one of another Skinned Mesh Renderer.\nHowever, this is not supported behavior and some other components may break the behavior.\nFor example, Automatically Freeze BlendShape in AAO Trace and Optimize component will freezes the BlendShapes which might be animated with this buggy behavior by being merged by AAO Merge Skinned Mesh component.\nHow is the behavior of Avatar Optimizer stable for future versions? # Avatar Optimizer uses the Semantic Versioning for versioning and mostly applies the rules of Semantic Versioning to the behavior of the components.\nWe guarantee that the behavior of already added components will not be changed in the same major version.\nHowever, we may add new features for already implemented component and the behavior of newly added components may be changed.\nIn some bugs, fixing them may change the behavior of the component widely.\nTo fix such bugs, we usually add new flag to enable the new behavior.\nBy making the flag disabled by default for already added components, we keep the behavior of already added components and by making the flag enabled by default for newly added components, we fix the bug for newly added components.\nThere are few exceptions for component behavior stability.\nThe features only for debugging the components are not guaranteed to follow the rules above.\nFor example, Debug Options on AAO Trace and Optimize component might be changed in any version. The features marked as experimental are not guaranteed to follow the rules above. The behavior of AAO Trace and Optimize component might be changed by implementing new optimization.\nHowever, the default settings of AAO Trace and Optimize component will never change the behavior and appearance of your avatar, so changes must not affect the avatar. When you encountered any unnatural or strange behavior other than these exceptions, please see FAQ first.\n"},{"id":2,"href":"/avatar-optimizer/en/docs/faq/","title":"Frequently Asked Questions","section":"Docs","content":" Frequently Asked Questions # Here is the list of frequently asked questions about Avatar Optimizer. If you have some other questions, please feel free to ask on the GitHub Discussions or on Fediverse (Misskey / Mastodon). I\u0026rsquo;m usually use Japanese, but you can ask me with English.\nThe behavior or appearance of the avatar is changed when using AAO Trace and Optimize component # If the behavior or appearance of the avatar is changed when using AAO Trace and Optimize component, it is always a bug unless you depend on bugs in other components of Avatar Optimizer.\nPlease report it on GitHub Issues, Fediverse (Misskey / Mastodon), Twitter, etc.\nMesh is invisible even though it is in the field of view # This problem is often due to forgetting to specify the Root Bone of the Skinned Mesh Renderer.\nAAO Merge Skinned Mesh component does not automatically set the Root Bone, so you need to manually set the Root Bone of the Merged Mesh1.\nIf you are using Modular Avatar, you can add MA Mesh Settings component to the root of the avatar to set the Root Bone and Bounds for the whole avatar.\nThe brightness of the meshes merged with AAO Merge Skinned Mesh component is different from other meshes # This problem is often due to forgetting to specify the Anchor Override of the merged meshes.\nAAO Merge Skinned Mesh component does not automatically set the Anchor Override, so you need to manually set the Anchor Override of the Merged Mesh1.\nIf you are using Modular Avatar, you can add MA Mesh Settings component to the root of the avatar to set the Anchor Override for the whole avatar.\nMaterial property animations conflict when using AAO Merge Skinned Mesh component # This problem is a known bug and is currently expected to conflicts.\nWhen merging meshes with animated material propeeries, be careful not to conflict. If there is a conflict, a warning will be displayed, so please check the warning.\nIssue of this problem: #340\nMaterial slot animations conflict when using AAO Merge Skinned Mesh component # AAO Merge Skinned Mesh component will merge material slots using the same material of the merge target meshes by default. This will also merge animated material slots.\nIf you have some material slots which will be replaced differently with animation, you should un-check Merge of Merge Materials of AAO Merge Skinned Mesh component.\nBlendShape animations conflict when using AAO Merge Skinned Mesh component # This problem is a known bug and is currently expected to conflicts.\nWhen merging meshes with animated BlendShapes, be careful not to conflict. If there is a conflict, a warning will be displayed, so please check the warning.\nIssue of this problem: #568\nPhysBones / Contact Receivers that are used in the OSC-based gimmick are not working # The AAO Trace and Optimize component is carefully designed to not change the behavior of the avatar. However, for technical reasons, the AAO Trace and Optimize component cannot detect some PhysBone / Contact Receiver components are used in the OSC-based gimmick or not.\nSome modern avatars have their own gimmicks based on PhysBone / Contact Receiver components, so those components will be forgotten to remove in most cases. Therefore, AAO Trace and Optimize will assume that such components are not for OSC-based gimmick, and remove them if they are not used for other ways.\nOf course, this assumption is not always the case, so if you are using PhysBone / Contact Receiver components for the OSC-based gimmick without Animator or Expressions, please configure your avatar to detect them as used in the avatar.\nAAO Trace and Optimize will not remove them if they are used in the Animator in the avatar. So, by adding parameters used in the OSC-based gimmick to the parameter list of Animator Controller or Expression Parameters, such components will not be removed.\nIn addition, for future discussion, if your OSC-based gimmick is removed by AAO Trace and Optimize, could you let us know the name of parameter used in the OSC-based gimmicks? I may implement list of parameters likely to be used by OSC and keeping components for those parameters, or other ways to prevent removing them in the future. Please feel free to contact on the GitHub issue below, Fediverse (Misskey / Mastodon) or Twitter.\nIssue of this problem: #1090\nI cannot upload the avatar because of pre-build hard limit check # Avatar Optimizer and some other non-destructive avatar modification tools may make your avatar not exceed the hard limit of VRChat. However, the upload button on the VRCSDK Control Panel will be disabled if the hard limit is exceeded with on-scene Avatar. You may use the following methods to skip pre-build hard limit check. Please note that those methods will not skip the post-build hard limit check.\nManual bake avatar before uploading the avatar.\nYou can use NDM Framework/Manual bake avatar on the context menu of the Avatar GameObject to apply non-destructive tools before uploading the avatar. This will clone your avatar and apply non-destructive tools to the cloned avatar, so your original avatar will not be modified.\nUse Upload without pre-check by Sayamame-beans.\nUpload without pre-check is a tool that allows you to upload the avatar without pre-build hard limit check.\nUse VRCQuestTools by kurotu.\nVRCQuestTools is a tool to easily convert your avatar to Android / Quest compatible avatar.\nAs a part of the tool, VQT Avatar Builder allows you to upload the avatar without pre-build hard limit check for Android build.\nI want to support the development of Avatar Optimizer # If you want to support the development of Avatar Optimizer, feedback on GitHub Discussions, bug reports, feature requests, etc. on GitHub Issues, and pull requests are welcome.\nIssues with good first issue are relatively easy to implement. It is recommended for your first pull request. Also, issues with help wanted are ones that lack developers or information. Your participation in discussions and development would be appreciated.\nI also accept financial support on GitHub Sponsors and Booth.\nMerged Mesh is a Skinned Mesh Renderer which is attached along with AAO Merge Skinned Mesh component.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n"},{"id":3,"href":"/avatar-optimizer/en/docs/changelog/","title":"Changelog","section":"Docs","content":" Changelog # All notable changes to this project are documented in this page.\nThe format is based on Keep a Changelog.\n1.7.8 - 2024-07-22 # Fixed # Index out of bounds error with remove mesh by mask #1119 NRE with Generic Avatar #1122 1.7.7 - 2024-07-08 # Added # Add Traditional Chinese #1102 Fixed # VRCAnimatorPlayAudio support is broken #1114 1.7.6 - 2024-06-17 # Fixed # BlendTree with NormalizedBlendValues Broken with MergeBlendTree #1096 Remove Zero Sized Polygon may remove small polygons #1098 1.7.5 - 2024-06-10 # Added # Warnings for bad API Usages #1091 Changed # Ignore floating point precision error in Merge PhysBone #1086 Animation Warning of Merge Skinned Mesh will not generated if source Renderer is not animated #1087 Expression Parameters are now considered as a part of Avatar Dynamics Parameter destination #1089 Relax condition for scaled evenly check #1092 Trace and Optimize will merge more bones than before. Removed # Write to Asset on Play menu item which is no-op #1085 Particle Syatem with Mesh Renderer shape will be broken #1093 Fixed # Merge BlendTree Layer will break some BlendTrees that have overriden by other layers #1084 1.7.4 - 2024-05-17 # Fixed # Some rare material swap animation can cause exception #1067 Invalid AABB error message from UnityEngine if there are no source for Merge Skinned Mesh #1068 1.7.3 - 2024-05-10 # Added # Declare VRCSDK 3.6.x compatibility #1060 Fixed # Mesh preview may cause empty mesh on enter play mode if reload scene is disabled #1064 MMD Compatibility can be broken with Merge BlendTree Layers #1065 1.7.2 - 2024-05-09 # Fixed # Entry/Exit to BlendTree broken with None motion in default state 1057 An error with MergePhysBone #1061 Animators depends on the WD=off behavior can be broken #1062 1.7.1 - 2024-05-07 # Added # Implement mask texture editor #1044 Add Simplified Chinese translation #1055 Changed # Improved behavior with Read/Write Off #1045 Because of Unity limitation, AAO cannot process meshes with R/W off on Start so it will be error. However, on Awake, we can read them so AAO should process them. Since this version, AAO will process meshes with R/W off on Awake. This reduces the number of errors on the apply on play. If you\u0026rsquo;re using Av3Emulator, you still see the error. In addition, in such case, we\u0026rsquo;ll show Auto Fix button on the error message. If you press the button, AAO will fix the error by changing the mesh to read/write enabled. Advanced Options section has benn renamed to Debug Options #1052 This express the purpose of the section more clearly. Added Advanced Optimizations and moved Remove Zero sized Polygons to it #1052 The Remove Zero sized Polygons can break some shaders or animations so it\u0026rsquo;s not enabled by default. To make it more clear, we moved it to Advanced Optimizations. Fixed # Material Slot animations for multi-material multi-pass rendering are broken #1042 Previously we only preserves animations for the number of submeshes instead of material slots. Relax Bounds condition for Automatic Merge Skinned Mesh #1043 Previously, AAO doesn\u0026rsquo;t merge Skinned Meshes if bounds are different accurately. Since this version, AAO will merge meshes if bounds are the same with precision to the last 6 digits of decimal point. Entry/Exit to BlendTree broken with None state 1048 Particle System with bone-rigged Skinned Mesh Renderer will be broken #1054 1.7.0 - 2024-04-30 # Added # Animator Optimizer #854 Most features of Animator Optimizer is not available in Unity 2019. Animator Optimizer optimizes your Animator Controller without behaviour Changes Current Optimizer includes the following optimization Remove meaningless properties #854 Converts Entry / Exit to 1D BlendTree #854 #867 #927 #970 #982 #991 Merges multiple BlendTrees to single Direct BlendTree #870 #978 #980 #984 Removes meaningless Animator Layers #870 Asset Description #847 Asset Description is the file to provide information of your assets for Avatar Optimizer. Please see documentation for more details. Warning for material animation in Merge Skinned Mesh #769 Merge Skinned Mesh does not support animating material properties differently. (In other words, it can be broken.) Since this version, AAO will warn for such a case. If you animated all materials from same animations, your animation will not be warned. API for declaring dependency relationship to the name of the component #943 You can use this API to not change the name of the GameObject. Configuring Clamp BlendShapes (Deprecated) #957 Since VRCSDK 3.5.1, VRCSDK sets Clamp BlendShapes (Deprecated) to true on assembly reload. This is not a good setting for AAO in EditMode since AAO does not support clamping BlendShapes. That\u0026rsquo;s why AAO now configures Clamp BlendShapes (Deprecated) to false in edit mode and true in play mode. PlayMode is usually used for testing the avatar behavior so it\u0026rsquo;s better to have the same setting as VRChat client. If you want not to change this setting, please disable Tools/Avatar Optimizer/Configure Clamp BlendShape Weight. Automatic Merge Skinned Mesh #952 #972 #1010 #1020 #1021 Trace and Optimize now automatically merges Skinned Meshes if possible. Trace and Optimize will merge your mesh if the material properties or enablement of the mesh is animated similarly and has no BlendShapes. Components API for Scripting Usage #976 You can now add AAO components from your script. Animations animating missing GameObject is removed #994 Since this update, animations that targeting GameObjects with post-AAO paths is no longer working. Please create animations that targeting GameObjects with pre-AAO paths. Remove Mesh by Mask #998 With this component, you can remove polygons with mask texture. You can use use mask for MeshDeleterWithTexture or alpha mask to remove polygons. Remove Empty SubMesh in Trace and Optimize #1007 This removes empty SubMeshes including becomes empty by optimization. Changed # MergePhysBone now corrects curve settings #775 MergePhysBone now warns if chain length are not same #775 MergePhysBone with only one source is now error #775 It was not working well and not a error by a bug. Animator Parser is completely rewritten #850 #968 #1011 New Animator Parser allow us to track animating properties animated by components removed by AAO. PhysBone that swings no bones are now removed #864 I found such a PhysBone on Lime so I added this feature. Switched Localization system to NDMF from CL4EE #873 Since this release, Avatar Optimizer is no longer depends on CL4EE. Because VCC doesn\u0026rsquo;t remove unused packages, CL4EE may still be installed on your project. If you want to remove CL4EE, please remove it manually. Suppressed animated BlendShape warning of FreezeBlendShape if it\u0026rsquo;s animated to a few constants #881 Modern models have tons of BlendShapes to change their face shape but emotion animation of some of them animates such a BlendShapes to constant (default value). That\u0026rsquo;s unnecessary (incorrect I think) and force users to remove or change the clip when user wants to face shape. I see AAO users use FreezeBlendShapes for overriding such a BlendShapes on twitter. I think using this way is reasonable enough so I suppressed the warning if AAO detected such a usage. Changed minimum VRCSDK to 3.3.0 #882 VRCSDK 3.3.0 is required for stable NDMF-VRCSDK compatibility. Endpoint Position settings for newly created MergePhysBone is now Copy instead of Clear #945 The Clear settings will increase the number of PhysBone Transforms so it\u0026rsquo;s not better as a default settings. Improved activeness animation warning in Merge Skinned Mesh #948 Reduced false-positive warnings Previously, AAO warns if activeness warning is applied to different GameObjects. However, this can be false-positive if animation is applied to different GameObjects with same timing. Since this version, AAO will not warn if the activeness is animated in same animation clip with same curve. Combined warning per Merge Skinned Mesh component. Previously, AAO warns for each source Renderers. Since this version, AAO creates one warning for each Merge Skinned Mesh component. Add error for Cloth component in Merge Skinned Mesh component #949 The Cloth component is not supported by Merge Skinned Mesh component. In previous versions, AAO will keep the source Skinned Mesh Renderer if it\u0026rsquo;s with Cloth component by bug. Since this version, AAO will make an error if the source Skinned Mesh Renderer is with Cloth component. Remove Unused Objects now removes PhysBones and Contact Receivers with parameters defined but not used by Animator Controllers #959 Previously, AAO did not remove PhysBones and Contact Receivers if they are defined in Animator Controllers whether they are used or not. I thought such a PhysBones on the base body are rare but my friend told me there is Manuka has such a PhysBone so I added this feature. Dropping GameObject to PrefabSafeSet adds the All components on the GameObject to the PrefabSafeSet #960 You can add all PhysBones on the GameObject by dropping the GameObject to the MergePhysBone component. MergeSkinnedMesh now warns if Root Bone or Anchor Override are not set #963 It will be error if read/write mesh is off in play mode again #1018 I found that we may not possible to read mesh with r/w mesh off mode in play mode with the Av3Emulator. Disabled AutoFreezeBlendShape for Skinned Mesh Renderers with Cloth component #1029 According to the report, making some polygons zero-size by AutoFreezeBlendShape will make initializing avatar extremely heavy. After a small discussion, we decided to not automatically optimize Skinned Mesh Renderers with Cloth component. Removed # Compatibility with VRCQuestTools v1.x #847 Please use VRCQuestTools v2.x, which has compatibility with AAO. Fixed # Inspector of ComponentTypePair (GCDebug) is broken #846 Bones swung by unused PhysBones (which will be removed by AAO) are not merged #850 Note that To fix this problem, AnimatorParser is almost completely rewritten. It\u0026rsquo;s not expected to have behavior change, but if you found some, please report it. Re-fix Nested Constraint can be broken with Trace and Optimize #880 Fix non-VRChat project support #884 Fix VRM support #892 ArgumentNullException in Edit-mode Remove Mesh Preview #942 Bad behavior if EditMode preview is enabled when entering play mode #956 PlayableLayerControl or AnimatorLayerControl on non-root animator are ignored #964 Box Editor of Remove Mesh in Box can be broke with scale of Skinned Mesh Renderer #1019 1.6.13 - 2024-04-13 # Fixed # Animator Controller on the VRCStation will be broken #1002 Remove Component can be fails with RequireComponent attribute #1003 1.6.12 - 2024-04-09 # Removed # Activeness Optimization for Constraint component #996 The constraint component is too complex to optimize correctly and reliably 1.6.11 - 2024-04-07 # Fixed # Bounds become broken if Update When Offscreen is enabled #990 1.6.10 - 2024-04-05 # Fixed # Missing Reference Exception with Trace and Optimize #986 1.6.9 - 2024-03-27 # Added # Support for VRCSDK 3.5.2 #926 #935 Fixed # ContextHolder become unknown component in NDMF 1.4.0 #946 1.6.8 - 2024-03-12 # Fixed # If some component refers external component, internal error #921 1.6.7 - 2024-02-28 # Fixed # Compilation Error due to VRCImposterSettings with VRCSDK 3.2.x #905 Skinned Mesh Renderers with None mesh will become Mesh with no polygons #906 This may affects bounds of Performance Rank in VRChat Exclusions not working with Automatically Remove Zero Sized Polygons #907 Fix non-VRChat project support #884 (backport in #909) Merge Toonlit with uv tiling is broken #911 1.6.6 - 2024-01-31 # Fixed # Some features are not working well if Trace and Optimize is not attached #876 1.6.5 - 2024-01-29 # Changed # AvatarOptimizer now uses ErrorReporting API of NDMF instead of our own API #805 Project is slightly renamed to AAO: Avatar Optimizer #830 The term AAO and Avatar Optimizer are not changed, but display name on the VCC is changed to AAO: Avatar Optimizer Fixed # Fix support for UniVRM components #802 VRM: Fix MergeSkinnedMesh breaking BlendShapeClip / VRM10Expression #810 Unknown component warning were shown multiple time for one type #818 In addition, location of the unknown components are shown on the error report. Empty Armature trick broken #819 Added workaround for Array index (n) is out of bounds (size=m) error Humanoid Bones may be removed by Trace and Optimize #831 Add license, documentationUrl, and changelogUrl to package.json #851 Nested Constraint can be broken with Trace and Optimize #857 1.6.4 - 2023-12-10 # Fixed # Error with generic avatar in 2022 #794 Assertion Error in some rare case #795 1.6.3 - 2023-12-09 # Added # Support for VRCSDK 3.5.x #787 Actually, previous version of AAO works well with VRCSDK 3.5.x / Unity 2022 with tiny bugs. I\u0026rsquo;ve fixed some bugs in Unity 2022 in this release. Since this version, package.json declares Avatar Optimizer is compatible with VRCSDK 3.5.x. I was planned to release this changes while VRCSDK 3.5.0 is in beta. However, VRCSDK 3.5.0 beta was only 3 hours so I could not. Fixed # Fix NullReferenceException on Unity 2022 when extra Animator components are present #778 Fix Errors with Generic Avatars #779 Editing Prefabs with AAO Components in Unity 2022 will cause Error #782 Error if there are reference to Prefab Asset PhysBone Collider #783 Remove Mesh in Box editor broken if inspector is narrow #784 Errors for partially incorrectly configured avatars #786 Since this release, instead of internal errors, warnings are shown 1.6.2 - 2023-11-30 # Fixed # Path remapping for merge bone will not work well in some (relatively rare) case #764 Error due to PhysBone collider with root bone outside avatar #766 1.6.1 - 2023-11-29 # Fixed # Error if there are None colliders for PhysBone #758 BlendShapes can broken in extreamly rare cases #760 It seems this is due to Unity bug. 1.6.0 - 2023-11-27 # Added # Public API for registering component information #632 #668 Disabling PhysBone animation based on mesh renderer enabled animation #640 If you toggles your clothes with simple toggle, PhysBones on the your avatar will also be toggled automatically! Small performance improve #641 Ability to prevent changing enablement of component #668 Remove Zero Sized Polygons #659 Add support for UniVRM components #653 Support for Mesh Topologies other than Triangles #692 Skip enablement mismatched Renderers in Merge Skinned Mesh #670 This is now enabled by default for newly added Merge Skinned Mesh. Error for MergeBone on the Avatar Root #716 Warning for conflicts with animation Warning for freezing animated BlendShapes #719 Warning for merging renderers that activeness/enablement animated differently #675 PhysBone Optimization #733 Unnessesary isAnimated is now unconfigured Floor Colliders with same configuration will be merged to one floor collider Minimum Support for FinalIK #735 Changed # All logs passed to ErrorReport is now shown on the console log #643 Improved Behaviour with multi-material multi pass rendering #662 Previously, multi-material multi pass rendering are flattened. Since 1.6, flattened if component doesn\u0026rsquo;t support that. Remove Unused Objects removes meaningless Animators and Renderers #709 Renderers without Mesh and Animators without AnimatorController is meaningless Removed # Legacy GC #633 Preventing removing IEditorOnly in callback order -1024 #658 This is no longer needed since 1.5.0 but I forgot to remove so I removed in 1.6 Fixed # Improve support of newer Unity versions #608 Improve support of projects without VRCSDK #609 #625 #627 Prefab blinks when we see editor of PrefabSafeSet of prefab asset #645 #664 complex shader with SkinnedMeshRenderer without Bones Brokebn #694 bounds can be changed in apply on play if updateWhenOffscreen is true #697 Compatibility with transform moving plugins #715 Remove Mesh in Box was not working well with FloorAdjuster Some missing components warnings #736 warning for ONSPAudioSource, VRCImpostorSettings, and RectTransform are fixed Remove Unused Object may break ParticleSystem #738 Trigger Colliders can be disapper if you specify Transform instead of Collider instance. Initially diabled particle system module will be ignored MergeBone breaks ignoreTransforms of PhysBone #745 1.5.11 - 2023-11-18 # Fixed # Dynamic Bone support not working #727 1.5.10 - 2023-11-04 # Fixed # RigidBody Joint can be broken #683 1.5.9 - 2023-10-29 # Fixed # Animation clip length can be changed #647 1.5.8 - 2023-10-20 # Fixed # warning about VRCTestMarker when Build \u0026amp; Test #628 1.5.7 - 2023-10-19 # Added # Add compatibility for VRCQuestTools #619 Fixed # AutoFreezeBlendShape will freeze BlendShapes with editor value instead of animated constant #622 1.5.6 - 2023-10-17 # Changed # Make no-op as possible if no AAO component attached for your avatar #603 Error Report window is refreshed after exiting play mode #606 Removed # Error for Read/Write Mesh off Mesh #615 Since AAO creates Mesh every time, no more error is required! Fixed # Multi-frame BlendShape can be broken #601 Update notice may show incorrect version #602 Preview button is not disabled even if mesh is none #605 BindPose Optimization may break mesh with scale 0 bone #612 1.5.5 - 2023-10-15 # Fixed # Constraints and Animations can be broken with Automatic MergeBone #594 NRE with SMR with None with preview system #596 Some Multi-Frame BlendShape broken #597 BlendShape can be broken with MergeBone Optimization #599 1.5.4 - 2023-10-14 # Added # Add compatibility for Satania\u0026rsquo;s KiseteneEx #584 Changed # Normal check is skipped for empty mesh #588 Meshes without Normal are shown on the normal existance mismatch warning #588 Fixed # Error with MeshRenderer without MeshFilter #581 Preview not working with VRMConverter #582 AvatarMask about HumanoidBone broken #586 Unused Humanoid Bones can be removed #587 1.5.3 - 2023-10-11 # Changed # Ignore the warning instead of migration from 0.3.x or older #570 Fixed # AnimatorController with Synced can be broken #564 AnimatorOverrideController may not be proceed correctly #567 Unclear behaviour if we merged meshes with and without normals #569 1.5.2 - 2023-10-10 # Added # Feature for debugging GC Objects #543 More MMD BlendShapes are registered #552 New English Translation BlendShapes are compatible with AAO! Check for update #554 Changed # You now cannot key any of AvatarOptimizer Components #551 Previously you can key AvatarOptimizer Coponent but it was meaningless. Fixed # EditMode Preview of RemoveMeshInBox is not correct #550 Avatar Standard Colliders can be removed #553 Freeze BlendShape may break Visame with MergeSkinnedMesh #561 1.5.1 - 2023-10-08 # Fixed # MergePhysBone component may be shown as unknown components #541 MergeBone may break Fur #542 1.5.0 - 2023-10-07 # Added # Support for NDMF integration #375 Pre-building validation for MergeBone #417 There are some (rare) cases that are not supported by MergeBone. This adds warning for such case. Validation error for self recursive MergeSkinnedMesh #418 Advanced Settings Section for Trace and Optimize #419 Moved Use Advanced Animator Parser to there Added Exclusions for exclude some GameObjects from optimization In this section, there are for debugging GC Objects #464 Avoid Name Conflict in MergeBone #467 Full EditMode Preview of RemoveMesh Components #500 Significant Performance Improvements with small code changes #523 Changed # Improved \u0026lsquo;Remove Unused Objects\u0026rsquo; #401 Remove Unused Objects now removes unnecessary Components \u0026amp; Bones! With new algorithm, you can preserve end bones (#430) You may use Use Legacy GC to use legacy algotythm for Remove Unused Objects in Advanced Settings (#419) Performance: Share MeshInfo2 between SkinnedMesh processing and MergeBone #421 Declare compatible with VRCSDK 3.4.x #513 Change Japanese Translation of \u0026ldquo;BlendShape\u0026rdquo; #535 Deprecated # UnusedBonesByReferenceTool component is now obsolete #430 Newly introduced algorithm ofRemove Unused Objects does same thing! You can migrate to Remove Unused Objects only with one click! Removed # internal ApplyOnPlay framework #504 Fixed # Crash with Unity 2022 #423 Due to bug in Unity Editor 2022.3 or later, Avatar Optimizer was not compatible with Unity 2022. Error if all vertices of some BlendShape is removed by RemoveMeshByBlendShape or RemoveMeshInBox #440 RemoveMeshByBlendShape on the SkinnedMeshRenderer with MergeSkinnedMesh not working #451 MergeBone may make some bone inactive to active if bone being merged is inactive #454 Avoid problematic material slot in MergeSkinnedMesh #508 This avoids Unity\u0026rsquo;s bug in 2019. In Unity 2022, this is no longer needed. Editor of EditSkinnedMesh components may not work well if the object is inactive #518 1.4.3 - 2023-09-05 # Fixed # Mesh broken with BlendShape Frame with weight 0 #408 1.4.2 - 2023-09-04 # Fixed # Components/GameObjects can falsely detected as always disabled / inactive. #403 1.4.1 - 2023-09-02 # Fixed # RootBone become None with Merge SkinedMesh #399 1.4.0 - 2023-09-02 # Added # Support for Multi Frame BlendShapes #333 Add link to help page #382 Advanced Animator Parser #343 This is new AnimatorController parser to collect animated properties This parser understands AnimatorLayers, so with this parser, AAO can freeze BlendShapes which are always finally animated to a constant value. This also understands Additive Layer and BlendTree, so extremely rare problem in previous Animator Parser with Additive Layer or BlendTree will be fixed with this parser. Multi Pass Rendering of Last SubMesh support #384 Remove Mesh By BlendShape Editor now can set BlendShape weights to 0/100 Changed # Auto FreezeBlendShape now freezes meaningless BlendShape #334 If you removed some vertices with RemoveMeshInBox or RemoveMeshWithBlendShape, some BlendShape may transform no vertices Auto FreeseBlendShae now freezez such a BlendShapes Auto FreezeBlendShape now freezes vertices even if already FreezeBlendShape is configured. #334 Meshes generated by AAO now have name #371 This will improve compatibility with UniVRM. VPM Package now doesn\u0026rsquo;t include Test code #372 #373 Better error infomation for MeshInfo2 error #381 Declare compatible with VRCSDK 3.3.x #395 Understandable Error if there are Missing Script Component #398 Why VRCSDK doesn\u0026rsquo;t have such a error system? Fixed # MergeBone not working well with non-restpose bones #379 Unclear Error with Mesh with Read/Write off #386 Clear Endpoint Position may not work well with ignore transforms #390 Clear Endpoint Position doesn\u0026rsquo;t support Undo #390 1.3.4 - 2023-08-22 # Changed # Internal implementation of Trace and Optimize #361 Documentation Improvements #366 #365 1.3.3 - 2023-08-21 # Added # BlendShape Weight mismatch warning is now build-time warning instad of validate time warning #359 Thanks to FreeseBlendShape by TraceAndOptimize, most pre-build this warning is false positive. So this warning is moved to build-time only. Fixed # ClearEndpointPosition is not applied for non-first PhysBones on the GameObject #357 Incompatbile with Reload Scene disabaled #358 1.3.2 - 2023-08-20 # Fixed # Children of IsActive animated object is not considered #342 Multi Passs Rendering not supported error doesn\u0026rsquo;t have location info #347 1.3.1 - 2023-08-19 # Fixed # Unity Editor may freezes when there are circular dependency #329 Network ID is not assigned for newly created PBs #331 Internally assigned animator controller is not skipped for default choosen playable layer in Trace and Optimize #332 VRCSDK assigned default animators are not considered in Trace and Optimize #332 This bug doesn\u0026rsquo;t create bad behavior for now but will does in the feature. Humanoid Animation are not considered in Trace and Optimize #332 This bug doesn\u0026rsquo;t create bad behavior for now but will does in the feature. Material Slot with null material is created if there are more SubMesh than Material Slots #337 AAO silently ignored multi pass rendering #337 For now, multi pass rendering of last SubMesh is not (yet) supported so now cause error but will be supported. There is no warning about BlendShape weight difference #336 1.3.0 - 2023-08-12 # Added # Remove always disabled objects #278 The new Remove Mesh By BlendShape component removes mesh data based on BlendShapes. #275 Option to process Make Children before modular avatar #296 Changed # Use UnityEditor api to compress texture #276 This also adds some supported texture formats. Every component have AAO prefix in their name now #290 The official shorthand for this tools is AAO! Automatic Configuration component has been renamed to Trace And Optimize #295 Fixed # UnusedBonesByReferenceTool error with SMR without mesh #280 MergeSkinnedMesh doesn\u0026rsquo;t work well with eyelids #284 Animating Behaviour.m_Enabled not working #287 Error Report Window may not refreshed after build error #299 Apply On Play may not working well #305 Some components unexpectedly can be added multiple times #306 1.2.0 - 2023-07-26 # Added # Automatic bounds computation in MergeSkinnedMesh #264 Automatic Configuration System #265 Currently FreezeBlendShape can be automatically configured. Support for material swapping animation in MergeSkinnedMesh #274 Changed # Support newly activated avatars in play mode for apply on play #263 Fixed # Breaks mesh without tangent #271 1.1.1 - 2023-07-14 # Changed # Avatar GameObject marked as EditorOnly no longer be removed #261 Previously, if avatar GameObject is marked as EditorOnly, whole avatar is removed and this confuses users. Fixed # Name of failed ApplyOnPlayCallback is not included in error message #260 Entering play mode can be extremely slow if you have many avatar on the scene #262 1.1.0 - 2023-07-13 # Added # Now we can choose texture format for Merge Toon Lit Material #251 This includes one tiny BREAKING CHANGES. Previously MergeToonLit uses ARGB32 as texture format but for now, it use ASTC 6x6 or DXT5 by default based on platform. Changed # Move Components into Avatar Optimizer folder #247 Previously they are Optimizer folder Completely rewrite apply on play system #249 This will remove EditorOnly on play. This enable UnusedBonesByReferencesTool component on play. This replaces way to apply [modular-avatar by bdunderscore] on play. modular avatar will be applied before AvatarOptimizer main logic and after removing EditorOnly. This will remove enable/disable checkbox on components, which had no meaning. The framework for this changes will be published as separated framework when ready. Use binary form of asset file in avatar optimizer output #252 Fixed # Manual bake not working with avatars with invalid file name chars #253 Merge Toon Lit duplicates vertex too many #256 This could causes huge increase in avatar size. this is now fixed. 1.0.0 - 2023-06-27 # If you\u0026rsquo;re using v0.3.x or older, Please upgrade to v0.4.x before upgrading v1.x.x!\nもし v0.3.x 以前を使用しているのであれば, v1.x.xに更新する前に v0.4.x に更新してください!\nRemoved # Save format migration system #199 We no longer see save data in format of v0.3.x or older. Please migrate to v0.4.x format before installing v1.0.0. 0.4.12 - 2023-06-22 # Added # MergePhysBone without ClearEndpointPosition #239 Instead of ClearEndpointPosition, you can use original value, or override Endpoint Position. 0.4.11 - 2023-06-19 # Changed # Show error with user friendly message if BlendShape for eyelids are removed / frozen. #253 Fixed # eyelids BlendShape settings are mapped even if it\u0026rsquo;s disabled #235 This fixes error if internally eyelids BlendShape are frozen. 0.4.10 - 2023-06-17 # Fixed # PrefabSafesSet\u0026rsquo;s prefab modifications on latest layer are invisible on inspector #229 0.4.9 - 2023-06-16 # Fixed # NullReferenceException if window is in background #226 0.4.8 - 2023-06-16 # 0.4.7 - 2023-06-13 # Fixed # Dropping PhysBone to MergePhysBone is not working #221 First box will be size of zero #223 0.4.6 - 2023-06-10 # Changed # Improve ErrorReport window on build error #216 0.4.5 - 2023-06-06 # Fixed # Error in MergeSkinnedMeshProcessor with RecordMoveProperty #214 0.4.4 - 2023-06-04 # Changed # Make Remove Empty Renderer Object enabled by default #208 0.4.3 - 2023-06-02 # Added # Adding multiple values to PrefabSafeSet #200 See this video for more details. Overriden PrefabSafeSet properties are now highlighted as blue and bold #200 Fixed # Error when we removed some modification in PrefabSafeSet #201 There are several situations for this problem: When we removed value in original component When we removed new value in overrides When we reverted added twice in overrides When we reverted deletion in overrides When we reverted fake deletion in overrides Error when we reverted whole PrefabSafeSet with modifications #201 0.4.2 - 2023-05-30 # Fixed # MergeSkinnedMesh depends on other EditSkinnedMesh components does not working #195 Error with removed modified property in PrefabSafeSet Editor #196 Apply on Play may not work #198 0.4.1 - 2023-05-23 # Changed # Reimplemented Animation Mapping System Completely #168 This should fixes problem with objects/components at same place. Improve Animation Mapping System #172 This should reduce build time Disable animating m_Enabled of source SkinnedMeshRenderer #190 Animating m_Enabled of source SkinnedMeshRenderer now doesn\u0026rsquo;t affects merged SkinnedMeshRenderer If you actually want to enable/disable merged SkinnedMeshRenderer, animate m_Enabled of merged SkinnedMeshRenderer instead. Fixed # Error is not cleared on build #170 Merge PhysBone is not working #177 Previously, values are not copied correctly The help box for description of components without description were shown #178 Name of Is Animated and Parameter field are not correct #183 We cannot set override setting of Colliders to Copy #183 Error with MergeToonLit #185 Poor word choice in Japanese Translation #174 Localization is not applied for some fields #186 0.4.0 - 2023-05-20 # Added # Japanese Translation: 日本語化 #152 Changed # Save format for MergePhysBone #166 Previously used backed PhysBone component for override values are removed. There are no changes in behaviour. Just migrate your assets. Removed # Delete GameObject feature #153 Use EditorOnly tag instead Fixed # Error with Animator at non-root GameObject #164 Error with copied MergePhysBone component #165 0.3.5 - 2023-05-15 # Changed # Internal Errors not relates to any Object are now reported #160 Fixed # Error if there are multiple GameObjects with same path #159 0.3.4 - 2023-05-15 # Fixed # Reference to Component will become None #156 BlendShapes for Eyelids can be broken with FreezeBlendShape #154 0.3.3 - 2023-05-14 # 0.3.2 - 2023-05-14 # Added # Error Reporting System #124 This adds window shows errors on build This is based on Modular Avatar\u0026rsquo;s Error Reporting Window. thanks @bdunderscore Website for AvatarOptimizer #139 Available at https://vpm.anatawa12.com/avatar-optimizer/ Manual Bake Avatar #147 Left click the avatar and click [AvatarOptimizer] Manual Bake Avatar Changed # Improved \u0026amp; reimplemented Animation (re)generation system #137 This is completely internal changes. Should not break your project In previous implementation, animations for GameObjects moved by MergeBone, MergePhysBone or else doesn\u0026rsquo;t work well This reimplementation should fix this problem Fixed # Migration fails with scenes/prefabs in read-only packages #136 Now, migration process doesn\u0026rsquo;t see any scenes/prefabs in read-only packages. 0.3.1 - 2023-05-05 # Fixed # Can\u0026rsquo;t remove SkinnedMeshRenderer error #133 This error should do nothing bad but it confuses everyone Bad behaviour with VRCFury on build #134 0.3.0 - 2023-05-04 # Added # Make Children of Me #100 As a alternative of feature removal in same pull request UnusedBonesByReferencesTool #112 This is port of UnusedBonesByReferencesTool by Narazaka Support for VRCSDK 3.2.0! #117 This includes support for PhysBone Versions and PhysBone 1.1 Changed # Use IEditorOnly instead of mokeypatching VRCSDK #102 Move the toggle for Override and the setting of the value after Override closer together. #105 With this changes, the merged PhysBone is now hidden. The merged PhysBone will be shown in Play mode. Now we can Copy (instead of Override) Pull, Gravity, Immobile properties even if Integration Type is overriden. #105 During migration, if Integration Type (previously called Force) is configured to be Override, Pull, Gravity, Immobile will be configured to be Override. This is BREAKING changes. Now we can Copy / Override Immobile Type and Immobile (strength) separately. #105 Previously, if you override Immobile Type, you also required to override Immobile but no longer required. This is BREAKING changes in the semantics of immobile property. Upgrade CL4EE to 1.0.0 #121 Removed # BREAKING Removed Prefab Safe List #95 BREAKING Removed RootTransform feature from MergePhysBone #100 See this issue comment for more datails. Removed support for VRCSDK 3.1.x. #117 Dropping VRCSDK support is a BREAKING changes. However, we may drop old VRCSDK support in the minor releases of AvatarOptimizer in the feature. In the other hand, we promise we\u0026rsquo;ll never drop old VRCSDK support in the patch releases. Notice: in the 0.x.y release, y is a minor releases in this project. Fixed # ShouldIgnoreComponentPatch cases compilation error #108 Merge PhysBone is working even if parents are differ #129 0.2.8 - 2023-04-19 # Fixed # NullReferenceException with prefabs in editor for PrefabSafeSet #92 0.2.7 - 2023-04-01 # Added # Support for VRCSDK 3.1.12 and 3.1.13 0.2.6 - 2023-03-31 # Added # Internationalization support #77 This adds way to translate editor elements. However, no other language translation than English is not added yet. Please feel free to make PullRequest if you can maintain the translation. Fixed # Remove Empty Renderer Object is not shown on the inspector #76 normal vector and tangent vector might not be unit length #81 This can be problem with FreezeBlendShape. Assertion does not work well #85 This can make invalid mesh Mesh is broken if more than 65536 vertices are exists #87 Because we didn\u0026rsquo;t check for vertices count and index format, vertex index can be overflow before. Generated assets are invisible for a while #88 0.2.5 - 2023-03-24 # Added # Show SaveVersion internal property on editor. #71 This makes it easier to make it easier to see prefab overrides Changed # reduce unnecessary modification in PrefabSafeSet/List #64 Previously PrefabSafeSet/List will always generates array size change modification. Now, array size change will be generated when added/removed elements from the collection. use ExecuteAlways instead of ExecuteInEditMode #72 Fixed # save version is not saved again #69 None is added/removed on the prefab modifications #73 0.2.4 - 2023-03-22 # Changed # make Accessing v1 error #61 This reduces future mistakes like #59 Fixed # RemoveMeshInBox refers old v1 configuration #60 0.2.3 - 2023-03-20 # Fixed # instantiating material occurs #58 0.2.2 - 2023-03-20 # Added # Make Children #53 Changed # Do not use cache on applying components now #56 Fixed # NullReferenceException if some component is removed #54 save version is not saved. this may break future migration #55 0.2.1 - 2023-03-20 # Fixed # Migration failed if some renderer is None #49 0.2.0 - 2023-03-19 # Added # Support for Prerelease in publish system #19 Changelogs (including ones for traditional releases) #19 Auto Test #23 Prefab support #11 Changed # BREAKING Save format for many components #11 Even if you added more elements than before on prefab, added elements on prefab instance will be kept. In previous implementation (unity default array prefab overrides implementation), can be broken easily. BREAKING All materials are merged by default #11 Due to save format migration, every materials will be marked as merged. If you have some materials not to be merged, please re-reconfigure that. Fixed # Fixed IndexOutOfError if there are more bones than bindposes #30 SkinnedMeshRenderers without bones will break mesh #35 We may forget checking components on disable objects #46 0.1.4 # Added # Support for feature Migration be0147b Changed # Box editor of RemoveMeshInBox 15fc931 Installer unitypackage name b32167f Warn if MergeSkinnedMesh is with SkinnedMeshRenderer with Mesh 1016aa6 Fixed # MergeToonLit is always marked as dirty 82ba212 RemoveMeshInBox does not handle bone correctly b2fea4f 0.1.3 # Fixed # Merge ToonLit error d0f1ef2 NRE if some bone is null 88efc2a 0.1.2 # Fixed # FreezeBlendShape behaviour 0cebf27 0.1.1 # Added # (internal) MeshInfo2 system for speed up 36716dd RemoveMeshInBox component 96f3526 Changed # Make VPAI installer unitypackage install 0.1.x 6615991 Editor of FreezeBlendShape cdd2031 Fixed # Several bugs 0.1.0 - 2023-01-16 # Changed # Move components from Anatawa12/ to Optimizer/ 949d267 Fixed # Several bugs 0.0.2 - 2023-01-15 # Added # Build Badges onto README 57614ac How to build onto README 2ad57cc Merge ToonLit Material a460e3f Fixed # FreezeBlendShape remains 95c0d43 0.0.1 - 2023-01-13 # Added # Merge Skinned Mesh Merge PhysBone Freeze BlendShape Merge Bone Clear Endpoint Position "},{"id":4,"href":"/avatar-optimizer/en/docs/component-kind/avatar-global-components/","title":"Avatar Global Components","section":"Component Kinds","content":" Avatar Global Components # Avatar Global Component is a kind of component which should be added to an avatar root and applied to whole avatar.\nThe \u0026ldquo;avatar root\u0026rdquo; is the GameObject at the top of the avatar hierarchy. For example, in the case of a VRChat avatar, the \u0026ldquo;avatar root\u0026rdquo; is the GameObject that has the VRC Avatar Descriptor component.\nIf you add any Avatar Global Components to anything other than the avatar root, you\u0026rsquo;ll see error on the inspector and will not have any effect.\nFollowing components are Avatar Global Component.\nTrace And Optimize UnusedBonesByReferencesTool "},{"id":5,"href":"/avatar-optimizer/en/docs/component-kind/","title":"Component Kinds","section":"Docs","content":""},{"id":6,"href":"/avatar-optimizer/en/docs/reference/trace-and-optimize/","title":"Trace And Optimize","section":"Component Reference","content":" Trace And Optimize (T\u0026amp;O) # Previously known as Automatic Configuration\nThis component will trace your avatar and optimize your avatar automatically. You can enable/disable some automatic optimization features with checkboxes.\nThis component should be added to an avatar root. (Kind: Avatar Global Component)\nTrace and Optimize is quite carefully designed under the premise that \u0026ldquo;never let it affect the appearance.\u0026rdquo;\nSo, if any problems occur, such as appearance is affected or some gimmick stops working, they are all caused by bugs in AAO, without exception.\nTherefore, if you encounter any problems with this component, please report it.\nWe will fix it as much as we can. Currently the following optimizations are applied automatically.\nAutomatically Freeze BlendShape\nAutomatically freezes BlendShapes which are always the same value or unused in animation, etc. Remove unused Objects\nBy scanning animation etc., automatically removes unused Objects (e.g. GameObjects, Components).\nIn addition, this will automatically toggle PhysBone Components if they are only used by toggled objects. Preserve EndBone\nPrevents removing end bones1 whose parent is not removed. Optimize PhysBone Settings\nOptimizes PhysBone settings for better performance. This performs the following optimizations. Merges PhysBone Colliders with the exactly same settings into one PhysBone Collider. Unchecks Is Animated if it\u0026rsquo;s not necessary. Optimize Animator\nOptimizes Animator Controller. See this section for more details. Merge Skinned Meshes\nMerges skinned meshes which don\u0026rsquo;t need to be separated.\nSome meshes may not be automatically merged in some cases, so use Merge Skinned Mesh manually if necessary. Allow Shuffling Material Slots\nBy shuffling material slots, you may reduce draw calls of the avatar. The order of material slots usually doesn\u0026rsquo;t matter, but it may affect the drawing order in rare cases. Also, You can adjust optimization with the following settings\nMMD World Compatibility\nOptimize with considering compatibility with MMD Worlds. e.g. Not freezing BlendShapes used by MMD Worlds. In addition, there are the following Advanced Optimizations.\nAutomatically Remove Zero Sized Polygons\nRemoves polygons whose area are zero. This can break some shaders or animated scales, so use it carefully. Also, there is Debug Options which is for workaround bugs but it\u0026rsquo;s unstable \u0026amp; not well-tested. See tooltips or implementation for more details.\nAnimator Optimizer # This feature currently applies the following optimizations.\nConvert Entry-Exit to BlendTree\nThis tries to convert Animator Controller layers to BlendTree as possible. Merge BlendTree Layers\nThis merges multiple BlendTree layers to single Direct BlendTree layer as possible. Remove Meaningless Layers\nThis removes layers which have no state nor a transition. AAO currently assumes any bones whose name ends with end (ignoring case) are end bones.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n"},{"id":7,"href":"/avatar-optimizer/en/docs/reference/unused-bones-by-references-tool/","title":"UnusedBonesByReferencesTool","section":"Component Reference","content":" UnusedBonesByReferencesTool # Marks it as EditorOnly that bones referenced only from EditorOnly meshes.\nThis component should be added to an avatar root. (Kind: Avatar Global Component)\nThis component is obsolete. You should use Remove unused Objects of Trace and Optimize instead. This component will never get algorithm improvements. This is port of UnusedBonesByReferencesTool by Narazaka but run at build time.\n"},{"id":8,"href":"/avatar-optimizer/en/docs/reference/","title":"Component Reference","section":"Docs","content":""},{"id":9,"href":"/avatar-optimizer/en/docs/component-kind/edit-skinned-mesh-components/","title":"Edit Skinned Mesh Components","section":"Component Kinds","content":" Edit Skinned Mesh Components # Edit Skinned Mesh Component is a kind of component which should be added to a GameObject which has a SkinnedMeshRenderer component, and applies some modification to the SkinnedMeshRenderer.\nThere are two sub-kinds.\nSource Component # This kind of component will produce Mesh and some other properties of SkinnedMeshRenderer.\nFollowing components are Source Edit Skinned Mesh Component.\nMergeSkinnedMesh\nThis component will produce mesh from other (Skinned)MeshRenderers. Modifying Component # This kind of component will (duplicates and) modifies the existing Mesh and some other properties of SkinnedMeshRenderer.\nFollowing components are Modifying Edit Skinned Mesh Component.\nRemove Mesh By BlendShape Remove Mesh in Box Freeze BlendShape Merge ToonLit Material "},{"id":10,"href":"/avatar-optimizer/en/docs/developers/","title":"For Developers","section":"Docs","content":""},{"id":11,"href":"/avatar-optimizer/en/docs/reference/merge-skinned-mesh/","title":"Merge Skinned Mesh","section":"Component Reference","content":" Merge Skinned Mesh (MergeSMR) # Merges one or more SkinnedMeshRenderers and MeshRenderers into one SkinnedMeshRenderer.\nThis component should be added to a new GameObject which has a SkinnedMeshRenderer component without Mesh specified. (Kind: Source Edit Skinned Mesh Component)\nBenefits # Merging SkinnedMeshRenderer will reduce number of deforming mesh (skinning). Also, it can reduce material slots using the same material, so we can reduce rendering cost.\nNotes # This component makes it impossible to turn meshes on and off individually on animations, but material-related animations will work without modification.\nThis component will configure Meshes, Materials, BlendShapes, and Bounds but other settings will not be modified. Please edit SkinnedMeshRenderer component attached to same GameObject as MergeSkinnedMesh to set AnchorOverride or else.\nThis component is good for merging your cloth meshes and body meshes but not good for face meshes because BlendShape can cause performance impact. BlendShape is a feature became heavier in proportion to the count of vertices and BlendShapes. Merging SkinnedMesh increases vertices and face mesh usually have many BlendShapes. That\u0026rsquo;s why it\u0026rsquo;s not good to merge face meshes.\nIn addition, because of same reasons, you should freeze \u0026amp; remove unchanging BlendShapes for body / cloth meshes. You can freeze \u0026amp; remove BlendShape using Freeze BlendShape component. Add this component to both/either merge source SkinnedMeshRenderer and/or merged SkinnedMeshRenderer to freeze \u0026amp; remove BlendShapes. Also, you can use Automatically Freeze BlendShape of Trace and Optimize component to get the same benefits.\nTrace And Optimize will automatically do the same process, so in some cases you do not need to use this component. Settings # Skinned Renderers # The list of SkinnedMeshRenderers to be merged.\nDrop to None element at the bottom to add renderer and reset to None to remove from the list.\nStatic Renderers # The list of MeshRenderers (without mesh transform).\nThose meshes are transformed to polygons weighted to one bone, the GameObject that MeshRenderer belongs to.\nDrop to None element at the bottom to add renderer and reset to None to remove from the list.\nRemove Empty Renderer GameObject # If this checkbox is checked and the GameObject where SkinnedMeshRenderer belongs does not have any other components than SkinnedMeshRenderer, the GameObject will be removed from Hierarchy.\nSkip Enablement Mismatched Renderers # If this checkbox is checked, renderers whose enablement is different than target renderer on the build time will not be merged.\nMerge Materials # If this component found some Materials used in multiple renderers, the Materials will be listed here.\nCheck Merge to merge those MaterialSlots (SubMeshes) into one MaterialSlot. This reduces DrawCalls.\n"},{"id":12,"href":"/avatar-optimizer/en/docs/reference/freeze-blendshape/","title":"Freeze BlendShape","section":"Component Reference","content":" Freeze BlendShape # Freeze \u0026amp; remove BlendShape from the mesh.\nThis component should be added to a GameObject which has a SkinnedMeshRenderer component. (Kind: Modifying Edit Skinned Mesh Component)\nTrace And Optimize will automatically do the same process, so in most cases you do not need to use this component. Benefits # Freezing \u0026amp; removing BlendShapes has the following benefits.\nFor BlendShapes with non-zero weight, freezing BlendShapes will reduce processing cost. Even if the weight is zero, removing BlendShapes will reduce the size of avatars. Notes # By freezing BlendShape, the weights cannot be changed on Animation.\nSettings # You\u0026rsquo;ll see list of BlendShapes and check to freeze BlendShape.\n"},{"id":13,"href":"/avatar-optimizer/en/docs/reference/merge-toonlit-material/","title":"Merge ToonLit Material","section":"Component Reference","content":" Merge ToonLit Material # Merge VRChat/Mobile/Toon Lit materials to one material by packing texture manually.\nThis component should be added to a GameObject which has a SkinnedMeshRenderer component. (Kind: Modifying Edit Skinned Mesh Component)\nThis component currently only supports VRChat/Mobile/Toon Lit because I believe there are big demands but I may add support for other shaders. (also for third-party shaders) If you want other shader support, please write a issue\nThis component will create new materials thus material slots which have the materials created by this component will not be merged by AAO Merge Skinned Mesh component. You should add Merge ToonLit Material to the GameObject which has AAO Merge Skinned Mesh component if you want to merge materials from multiple renderers.\nSettings # Click Add Merged Material to add merged material. For each merged material, you can set multiple source materials from materials. Click Add Source or select your material from dropdown menu. For each source material, you must set where to the texture will placed to. Please change X, Y, W, H to fit to where you want. Click Generate Preview to generate each texture and see preview.\n"},{"id":14,"href":"/avatar-optimizer/en/docs/reference/remove-mesh-by-blendshape/","title":"Remove Mesh By BlendShape","section":"Component Reference","content":" Remove Mesh By BlendShape # Remove vertices transformed by specified BlendShape and their polygons.\nThis component should be added to a GameObject which has a SkinnedMeshRenderer component. (Kind: Modifying Edit Skinned Mesh Component)\nBenefits # By removing polygons which are hidden by clothes or something, you can reduce rendering cost, BlendShape processing cost, etc. without affecting the appearance so much. You can use this component to easily remove polygons with BlendShapes for shrinking parts of the body, which many avatars have.\nSettings # You\u0026rsquo;ll see list of BlendShapes and check to select blendShapes. If some vertices in your mesh is moved more than Tolerance by selected BlendShape, this component will remove the vertices.\nIn case polygons you want to remove are not removed, increase the Tolerance value. In case polygons you do not want to remove are removed, decrease the Tolerance value.\nIf you enabled Automatically set BlendShape weight for preview when toggled, when you toggle specifying BlendShapes, their weight will be automatically set to 100 or 0.\n"},{"id":15,"href":"/avatar-optimizer/en/docs/reference/remove-mesh-by-mask/","title":"Remove Mesh By Mask","section":"Component Reference","content":" Remove Mesh By Mask # Remove some polygons in any area specified by mask textures.\nThis component should be added to a GameObject which has a SkinnedMeshRenderer component. (Kind: Modifying Edit Skinned Mesh Component)\nBenefits # By removing polygons which are hidden by clothes or something, you can reduce rendering cost, BlendShape processing cost, etc. without affecting the appearance so much.\nYou can use this component to easily remove polygons with alpha mask texture or mask texture for MeshDeleterWithTexture by gatosyocora.\nSettings # You\u0026rsquo;ll see the list of material slots of the mesh. Select the material slots you want to remove polygons with mask texture.\nMask Texture # The mask texture to remove polygons. Click \u0026ldquo;Edit\u0026rdquo; button to open the Mask Texture Editor.\nRemove Mode # Since the mask textures have different colors depending on the case, you need to select the corresponding mode.\nWhen you use the mask texture which is designed to remove polygons if the color is (close to) black, select Remove Black mode.\nWhen you use the mask texture which is designed to remove polygons if the color is (close to) white, select Remove White mode.\nMask Texture Editor # With this window, you can edit the mask texture.\nAt the top of the window, information related to the mask texture being edited is shown.\nAt the center, there are controls for view and brush size.\nThe bottom of the window shows the original texture, mask texture and UVs of the mesh.\nYou can left-drag to paint the mask, and right-drag or shift + left-drag to move the view.\nYou can scroll to zoom in/out, and shift + scroll to change the brush size.\n"},{"id":16,"href":"/avatar-optimizer/en/docs/reference/remove-mesh-in-box/","title":"Remove Mesh in Box","section":"Component Reference","content":" Remove Mesh in Box # Remove some polygons in any of specified boxes.\nThis component should be added to a GameObject which has a SkinnedMeshRenderer component. (Kind: Modifying Edit Skinned Mesh Component)\nBenefits # By removing polygons which are hidden by clothes or something, you can reduce rendering cost, BlendShape processing cost, etc. without affecting the appearance so much.\nSettings # Adjust the value to add box. For each box, you can change the center Position, Size, and Rotation of the box. (In local coordinate)\nClick Edit This Box to show Gizmo to edit the box like below. You can scale, move and rotate the box.\nExample # With boxes shown on upper image, meshes in the box will be removed as lower image shows.\n"},{"id":17,"href":"/avatar-optimizer/en/docs/reference/clear-endpoint-position/","title":"Clear Endpoint Position","section":"Component Reference","content":" Clear Endpoint Position # This component will replace EndpointPosition to 0 with adding _EndPhysBone GameObject.\nThis component should be added to a GameObject which has PhysBone Components.\nThis component doesn\u0026rsquo;t have any configuration for now but there\u0026rsquo;s one button on the view. Clicking Apply and Remove component will applies this operation and removes this component. This may be useful for developing avatars.\n"},{"id":18,"href":"/avatar-optimizer/en/docs/reference/merge-bone/","title":"Merge Bone","section":"Component Reference","content":" Merge Bone # Trace And Optimize will automatically do the same process, so in most cases you do not need to use this component. If you add this component to some GameObject, the GameObject will be removed and merged to parent GameObject. Also, if some other components are attached to the target GameObject, they will be removed too.\nIf the parent GameObject also have Merge Bone component, two GameObjects are merged to their further parent GameObject.\nAll children of GameObject where this component is applied will belong to parent of this GameObject.\nSettings # Avoid Name Conflict\nAvoids animation problems with name conflict by renaming child GameObjects "},{"id":19,"href":"/avatar-optimizer/en/docs/reference/merge-physbone/","title":"Merge PhysBone","section":"Component Reference","content":" Merge PhysBone (MergePB) # This component merges multiple PhysBone Components into one Component with MultiChildType == Ignore.\nThis component should be added to a new GameObject.\nNotes # Merge target PhysBones must be children of the same GameObject. Alternatively, you can use Make Children of Me option.\nThis component will create a new PhysBone root GameObject and make the bones swayed by merge target PhysBones into children of this GameObject.\nSince the root GameObject is treated as a PhysBone affected Transforms, the number of PhysBone Affected Transforms will be increased by one for each Merge PhysBone. The GameObject added by this component will not be swayed by PhysBone, so this can be a bug of the VRChat Performance Rank System.\nSettings # Make Children of Me # Make the bones swayed by merge target PhysBones into children of this GameObject.\nComponents # The list of PhysBone Component.\nDrop to None element at the bottom to add PhysBone and reset to None to remove from the list.\nOverrides # Below the configurations, there\u0026rsquo;s configurations like VRCPhysBone. For each property, you may select Copy to copy value from source property (only available if values from the sources are same) or Override to set new value instead.\nFor colliders, you can select Merge to merge colliders array from source physbones.\nFor Endpoint Position, you can select Clear to apply Clear Endpoint Position\n"},{"id":20,"href":"/avatar-optimizer/en/docs/reference/remove-zero-sized-polygon/","title":"Remove Zero Sized Polygon","section":"Component Reference","content":" Remove Zero Sized Polygon # Remove polygons whose area are zero.\nThis component should be added to a GameObject which has a SkinnedMeshRenderer component.\nSince this component works very late in the build process, this component is NOT Modifying Edit Skinned Mesh Component.\nAdding this component to the SkinnedMeshRenderers to be merged by Merge Skinned Mesh component has no effect.\nBenefits # By removing polygons whose area are zero, you can reduce rendering cost. This will have almost zero effect on the appearance.\nNotes # In some shaders, even if size of polygon in model file is zero, something can be rendered so there may be effect on the appearance.\nSettings # This Component doesn\u0026rsquo;t have any configuration for now.\nNotes # This component will be added by Trace and Optimize component. I recommend you to use Trace and Optimize instead of adding this component manually.\n"},{"id":21,"href":"/avatar-optimizer/en/docs/reference/make-children/","title":"Make Children","section":"Component Reference","content":" Make Children # These specified objects will be the children of this GameObject at build time.\nThis component is deprecated.\nThis function is not related to avatar optimization, so this component will be replaced by one in a currently planned non-destructive Avatar Modification Utils.\n"},{"id":22,"href":"/avatar-optimizer/404.html","title":"404th","section":"Introduction","content":""},{"id":23,"href":"/avatar-optimizer/en/docs/developers/asset-description/","title":"Asset Description","section":"For Developers","content":" Asset Description # Asset Description is the file to provide information of your assets for Avatar Optimizer.\nWhy Asset Description is needed # Avatar Optimizer has to know about all existing components in the Avatar to remove unnecessary ones.\nAvatar Optimizer v1.6.0 added document to make your components compatible with AAO and API for it, but for in-place modification tools that do not process on build, it\u0026rsquo;s a little bit complicated to remove components by IVRCSDKPreprocessAvatarCallback instead of Avatar Optimizer. Therefore, Asset Description was added in v1.7.0 as a simple mechanism to specify components that should be ignored by Avatar Optimizer at build time.\nFor non-destructive tools, we still recommend you to continue to remove components in IVRCSDKPreprocessAvatarCallback to prevent Avatar Optimizer from accidentally removing components when the execution order is incorrect.\nCreate Asset Description # To create Asset Description, select Create/Avatar Optimizer/Asset Description from right-click menu in the Project window.\nAvatar Optimizer searches from all files, so the name and location of Asset Description are free.\nEditing Asset Description # Comment # The comment field is for writing notes.\nAvatar Optimizer ignores comments.\nMeaningless Components # Meaningless Components is the list of component types that you want Avatar Optimizer to ignore.\nPlease specify the Script Asset of the component. Avatar Optimizer ignores the component of the specified Script Asset type and its subclass.\nIn Asset Description, as with the components in the Scene, types are stored in the form of guid and fileID of the Script Asset.\nTherefore, even if the class name is changed, the specification in Asset Description will work without any problems as long as the components in the Scene are not broken.\n"},{"id":24,"href":"/avatar-optimizer/en/docs/tutorial/basic-usage/","title":"Basic Usage","section":"Tutorial","content":" Basic Usage # Use Automatic Optimization # There are several optimizations which can be performed automatically for Avatars.\nRemoving Unused BlendShapes(Shape Keys)1 For BlendShapes with non-zero weight, freezing BlendShapes will reduce processing cost. Even if the weight is zero, removing BlendShapes will reduce the size of avatars. Removing unused Behaviours such as PhysBones If there are enabled PhysBones which do not need to be swayed (e.g., the swaying target mesh2 is always disabled), extra computational cost is caused. Merging bones which is not animated or swayed with PhysBones If the clothes bones are nested into the body bones, there will be many bones which are never moved locally. Such bones cause extra cost. Merging meshes which are toggled together or never toggled If your avatar has only one cloth, it might not be necessary to have separated meshes for body, hair, and clothes. Even if you have multiple switchable clothes, it might not be necessary to have separated meshes with body, hair, and underwear. With AvatarOptimizer, these optimizations can be performed automatically by simply adding AAO Trace And Optimize component to the Avatar Root!\nUpload Avatar # Now that you have added AAO Trace and Optimize component, let\u0026rsquo;s try uploading your avatar! AAO: Avatar Optimizer is a non-destructive avatar modification tool, and processes avatars on entering play mode or building them. Therefore, no special steps are required for uploading. Upload your avatar via VRCSDK Control Panal as usual.\nHowever, even though the hard limit will not be exceeded through Avatar Optimizer optimization, etc., the upload button cannot be pressed if the limit has been exceeded at the time of the VRCSDK pre-build check.\nYou can skip the pre-build check with several ways. Please refer faq for more details.\nChecking performance rank without uploading avatar # When using non-destructive avatar modification tools, Performance Rank on the VRCSDK Control Panel is no loner be relied upon.\nInstead, you can check Performance Rank in Play Mode with Actual Performance Window of anatawa12\u0026rsquo;s Gist Pack. Please check basic usages of anatawa12\u0026rsquo;s Gist Pack and documentation of Actual Performance Window for more details。\nReduce polygons with BlendShapes which shrink parts of the body # By removing polygons which are hidden by clothes or something, you can reduce rendering cost, BlendShape processing cost, etc. without affecting the appearance so much. To make this easier, AvatarOptimizer allows you to remove polygons with BlendShapes for shrinking parts of the body, which many avatars have!\nLet\u0026rsquo;s add AAO Remove Mesh By BlendShape component to Body Mesh!\nEnable Automatically set BlendShape weight for preview when toggled to make sure that unintended parts of the body are not removed, and select BlendShapes from the BlendShapes list below that shrink the parts of the body you want to remove!\nIn case polygons you want to remove are not removed, or you do not want to remove are removed, you need to adjust the Tolerance value! Tolerance decides how much the vertex is moved by BlendShape to be removed. In the first case, increase the value a little, in the second case, decrease it a little!\nBlendShape is the name of Morphing in Unity. Maya call them as Target Shape, Blender calls them as Shape Key, Metasequoia and MMD call them as Morph.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nIn this document, mesh means SkinnedMeshRenderer or MeshRenderer, not the Mesh asset in Unity.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n"},{"id":25,"href":"/avatar-optimizer/en/docs/developers/component-api/","title":"Component Scripting API","section":"For Developers","content":" Component Scripting API # Since Avatar Optimizer v1.7.0, Avatar Optimizer provides Component API to add Avatar Optimizer components to the Avatar. By using this API, you can create tools or components that add Avatar Optimizer components.\nComponents that supported by Component API # Currently, not all components are supported by Component API. Here is the list of components that are supported by Component API.\nRemoveMeshInBox - Adding and configuring component is supported RemoveMeshByBlendShape - Adding and configuring component is supported TraceAndOptimize - Adding with default configuration is supported but configuring is not supported For components that supports configuring, to keep compatibility with future features that enabled by default, you need extra attention for the configuration. See document below for more details.\nGetting Started # To use Component API, you have to reference com.anatawa12.avatar-optimizer.runtime assembly in your assembly definition file. Since Avatar Optimizer does not work on the runtime, you should not depends on com.anatawa12.avatar-optimizer.runtime assembly for runtime build.\nWe may remove some classes from com.anatawa12.avatar-optimizer.runtime on runtime build in the future. In other words, it\u0026rsquo;s recommended to avoid use of com.anatawa12.avatar-optimizer.runtime in runtime assembly, you should use it only in editor assembly.\nSecond, If you want to configure components, you have to call void Initialize(int version) method to ensure the compatibility with future features. The default setting of Avatar Optimizer can be changed in the future (as described in Behavior Stability).\nThe default setting of Components will be affected to the components added with GameObject.AddComponent\u0026lt;T\u0026gt;() method. Therefore, to keep behavior compability with future versions, you have to call Initialize method with the version of default configuration you want to use. The default configuration version should be described in the document of the Initialize method.\nWithout calling Initialize method, component will behave unexpectedly or you may get error in the future.\n"},{"id":26,"href":"/avatar-optimizer/en/docs/developers/distributing-prefabs/","title":"Distributing Prefabs","section":"For Developers","content":" Distributing Prefabs # Avatar Optimizer mey help you making your assets lightweight and optimized. Here are some recommendations for how to distribute prefabs that depend on Avatar Optimizer.\nGuide your users to the official distribution of Avatar Optimizer # Since Avatar Optimizer is published under MIT License, redistribution is allowed. However, I strongly recommend you to guide your users to the official distribution of Avatar Optimizer.\nYour unofficial distribution of Avatar Optimizer may be outdated. If users use outdated version, they may encounter bugs that have already been fixed in the official distribution. In addition, since Avatar Optimizer doesn\u0026rsquo;t guarantee forward compatibility, if your users use a newer version of Avatar Optimizer than your unofficial distribution and downgrade it to outdated version, some problems will be caused.\nThere are recommended ways to guide your users to the official distribution of Avatar Optimizer.\nIf your asset is distributed via VPM, let users install Avatar Optimizer via VPM as well.\nDeclare Avatar Optimizer as a dependency of your asset in your package.json and guide your users to add the Avatar Optimizer VPM repository to VCC. Here is the link to add the Avatar Optimizer Official repository to VCC.\nIf you want, you can mirror the Avatar Optimizer repository in your VPM repository. When mirroring, mirror the VPM repository, not from the GitHub Releases. Link to the official documentation of Avatar Optimizer.\nThis link is the official installation guide of Avatar Optimizer. The page will guide your users to install Avatar Optimizer in recommended way. Link to the Booth page of Avatar Optimizer.\nThe Booth page is one of the official distribution page of Avatar Optimizer. In the Booth page, the latest version of VPAI installer unitypackage is provided. Include VPAI installer unitypackage and guide your users to import the unitypackage.\nThe VPAI installer is the tool to install VPM packages like Avatar Optimizer just by importing a unitypackage. Here is the link to download the VPAI installer unitypackage for Avatar Optimizer 1.x.x . "},{"id":27,"href":"/avatar-optimizer/en/docs/","title":"Docs","section":"Introduction","content":""},{"id":28,"href":"/avatar-optimizer/en/docs/developers/make-your-components-compatible-with-aao/","title":"Make your components compatible with Avatar Optimizer","section":"For Developers","content":" Make your components compatible with Avatar Optimizer # This page describes the following two things.\nWhen can components be incompatible with Avatar Optimizer? How to improve the compatibility? If you have some question, please feel free to ask @anatawa12@misskey.niri.la on fediverse.\nWhen can components be incompatible with Avatar Optimizer? # If your components are on the avatar and still exist when Avatar Optimizer processes it, your components can be incompatible with Avatar Optimizer.\nSince Avatar Optimizer has Garbage Collection system for Components and others, Avatar Optimizer has to know about all existing components in the Avatar at the optimization.\nTo avoid problem with unknown components, Avatar Optimizer currently assumes unknown components\nhave some side-effects. will have dependency relationship to all components referenced in the component. (They can be changed in the future.) However, the assumption can be incorrect, so Avatar Optimizer will generate the following warning.\nHow to improve the compatibility? # Please remove your components before Avatar Optimizer processes as much as possible. If you cannot remove some components, please register them to Avatar Optimizer.\nSince Avatar Optimizer v1.7.0, Asset Description is added for components that doesn\u0026rsquo;t process on build or at runtime. If your tool process nothing at build time, you can use this to register your components.\nIf your tool process something at build time, registering with Asset Description is not recommended. This prevents Avatar Optimizer from accidentally removing components and causing your tool to not work properly when the processes execution order is unexpected/incorrect.\nRemoving your components # You can remove your components with several ways.\nIf your tool is a non-destructive tool based on NDMF1, removing your components before the Optimizing phase or before com.anatawa12.avatar-optimizer plugin (with BeforePlugin) in the Optimizing phase is recommended.\nIf your tool is a non-destructive tool not based on NDMF1, removing your components before the NDMF\u0026rsquo;s Optimizing phase is recommended. In this case, current NDMF executes Optimizing phase in order -1025, which is JUST before VRCSDK\u0026rsquo;s RemoveAvatarEditorOnly callback, so your tool should remove components with IVRCSDKPreprocessAvatarCallback with smaller callbackOrder.\nIf your components holds some information for your tool and has no meaning on the build time, removing your components before Avatar Optimizer processes with IVRCSDKPreprocessAvatarCallback is recommended. See above for the ordering of IVRCSDKPreprocessAvatarCallback.\nRegistering your components # If your tool wants to keep your component after Avatar Optimizer processes, you can register your components to Avatar Optimizer to tell about your components.\nFirst, to call APIs of Avatar Optimizer, please make an assembly definition file2 if your tool doesn\u0026rsquo;t have.\nNext, add com.anatawa12.avatar-optimizer.api.editor to assembly references in asmdef file.\nIf your tool doesn\u0026rsquo;t want to depends on Avatar Optimizer, please use Version Defines. Because Avatar Optimizer didn\u0026rsquo;t have public API prior to 1.6.0 and will break in 2.0.0, it\u0026rsquo;s recommended to add version range like [1.6,2.0) (or stricter like [1.7,2.0) when you need new APIs that can be available in the future).\nThen, define ComponentInformation for your component in your assembly.\n#if AVATAR_OPTIMIZER \u0026amp;\u0026amp; UNITY_EDITOR [ComponentInformation(typeof(YourComponent))] internal class YourComponentInformation : ComponentInformation\u0026lt;YourComponent\u0026gt; { protected override void CollectMutations(YourComponent component, ComponentMutationsCollector collector) { // call methods on the collector to tell about the component } protected override void CollectDependency(YourComponent component, ComponentDependencyCollector collector) { // call methods on the collector to tell about the component } } #endif In CollectMutations, you should register any mutation your component may do.\nIn CollectDependency, you should register build-time or run-time dependencies of your component.\nPlease refer xmldoc and method name for more datails.\nNDMF, Non-Destructive Modular Framework, is a framework for running non-destructive build plugins when building avatars by bdunderscore. Avatar Optimizer uses that framework for compatibility with many non-destructive tools based on NDMF.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nThe file defines assembly other than Assembly-CSharp. Please refer unity docs.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n"}]