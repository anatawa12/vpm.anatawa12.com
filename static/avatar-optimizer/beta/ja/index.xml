<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Introduction on Avatar Optimizer (1.6.0-rc.2)</title><link>https://vpm.anatawa12.com/avatar-optimizer/beta/ja/</link><description>Recent content in Introduction on Avatar Optimizer (1.6.0-rc.2)</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://vpm.anatawa12.com/avatar-optimizer/beta/ja/index.xml" rel="self" type="application/rss+xml"/><item><title>Changelog</title><link>https://vpm.anatawa12.com/avatar-optimizer/beta/ja/docs/changelog/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vpm.anatawa12.com/avatar-optimizer/beta/ja/docs/changelog/</guid><description>Changelog # このプロジェクトの重要な変更点は以下のとおりです。
Keep a Changelogをベースにした形式で表記されています。
1.6.0-rc.2 - 2023-11-22 # Fixed # FinalIK Components will be removed #742 1.6.0-rc.1 - 2023-11-21 # Fixed # Remove Unused Object may break ParticleSystem #738 Trigger Colliders can be disapper if you specify Transform instead of Collider instance. Initially diabled particle system module will be ignored 1.6.0-beta.12 - 2023-11-21 # Added # PhysBone Optimization #733 Unnessesary isAnimated is now unconfigured Floor Colliders with same configuration will be merged to one floor collider Minimum Support for FinalIK #735 Fixed # Some missing components warnings #736 warning for ONSPAudioSource, VRCImpostorSettings, and RectTransform are fixed 1.</description></item><item><title>Avatar Global Components</title><link>https://vpm.anatawa12.com/avatar-optimizer/beta/ja/docs/component-kind/avatar-global-components/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vpm.anatawa12.com/avatar-optimizer/beta/ja/docs/component-kind/avatar-global-components/</guid><description> Avatar Global Components # Avatar Global Componentはアバターのルートに追加することでアバター全体に作用するコンポーネントです。
&amp;ldquo;アバターのルート&amp;quot;とは、アバターの最も上の階層にあるGameObjectのことです。 例えばVRChat用アバターの場合、VRC Avatar DescriptorコンポーネントがあるGameObjectが&amp;quot;アバターのルート&amp;quot;です。
Avatar Global Componentをアバターのルート以外に追加した場合、インスペクター上にエラーが表示され、コンポーネントは一切動作しません。
以下のコンポーネントがAvatar Global Componentです。
Trace And Optimize UnusedBonesByReferencesTool</description></item><item><title>Trace And Optimize</title><link>https://vpm.anatawa12.com/avatar-optimizer/beta/ja/docs/reference/trace-and-optimize/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vpm.anatawa12.com/avatar-optimizer/beta/ja/docs/reference/trace-and-optimize/</guid><description>Trace And Optimize # 昔のバージョンではAutomatic Configurationという名前でした
このコンポーネントは、アバターを走査して自動的にできる限りの最適化を行います。 チェックボックスで自動的に行う最適化を選択することが出来ます。
このコンポーネントはアバターのルートに追加してください。(分類: Avatar Global Component)
現在、以下の機能を使った自動最適化が可能です。
BlendShapeを自動的に固定・削除する
アニメーションなどで使われていないBlendShapeを自動的に固定・除去します。 使われていないObjectを自動的に削除する
アニメーションなどを走査して、使われていないObject(GameObjectやコンポーネントなど)を自動的に削除します。 endボーンを残す
親が削除されていないendボーン1を削除しないようにします。 面積がゼロのポリゴンを自動的に削除する 面積がゼロのポリゴンを削除します。 また、以下の設定で自動設定を調節できます。
MMDワールドとの互換性
MMDワールドで使われるBlendShapeを固定しないなど、MMDワールドとの互換性を考慮した軽量化を行います。 他に、バグの回避などに使用するための高度な設定がありますが、それらは不安定であり、不用意に変更するべきではありません。 それらの機能については英語のTooltipやソースコード、または開発者の指示を参考にしてください。
AAOは名前がend(大文字小文字の区別なし)で終わるボーンをendボーンとして扱います。&amp;#160;&amp;#x21a9;&amp;#xfe0e;</description></item><item><title>UnusedBonesByReferencesTool</title><link>https://vpm.anatawa12.com/avatar-optimizer/beta/ja/docs/reference/unused-bones-by-references-tool/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vpm.anatawa12.com/avatar-optimizer/beta/ja/docs/reference/unused-bones-by-references-tool/</guid><description>UnusedBonesByReferencesTool # EditorOnlyなメッシュからしか参照がないボーンをEditorOnlyにします。
このコンポーネントはアバターのルートに追加してください。(分類: Avatar Global Component)
このコンポーネントは非推奨です。代わりにTrace and Optimizeの使われていないObjectを自動的に削除するを使用してください。 このコンポーネントの動作が改善されることはありません。 これはNarazakaさんのUnusedBonesByReferencesToolを移植したものですが、ビルド時に実行します。</description></item><item><title>Edit Skinned Mesh Components</title><link>https://vpm.anatawa12.com/avatar-optimizer/beta/ja/docs/component-kind/edit-skinned-mesh-components/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vpm.anatawa12.com/avatar-optimizer/beta/ja/docs/component-kind/edit-skinned-mesh-components/</guid><description> Edit Skinned Mesh Components # Edit Skinned Mesh ComponentはSkinnedMeshRendererコンポーネントのあるGameObjectに追加することで、そのSkinnedMeshRendererに作用するコンポーネントです。
このコンポーネントには2つの小分類があります。
Source Component # メッシュなどを生成するコンポーネントです。
以下のコンポーネントがSource Edit Skinned Mesh Componentです。
MergeSkinnedMesh
このコンポーネントは他の(Skinned)MeshRendererを基にメッシュを生成します。 Modifying Component # 既にあるメッシュなどを(複製して)編集するコンポーネントです。
以下のコンポーネントがModifying Edit Skinned Mesh Componentです。
Remove Mesh By BlendShape Remove Mesh in Box Freeze BlendShape Merge ToonLit Material</description></item><item><title>Merge Skinned Mesh</title><link>https://vpm.anatawa12.com/avatar-optimizer/beta/ja/docs/reference/merge-skinned-mesh/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vpm.anatawa12.com/avatar-optimizer/beta/ja/docs/reference/merge-skinned-mesh/</guid><description>Merge Skinned Mesh # 1つ以上のSkinnedMeshRendererやMeshRendererを1つのSkinnedMeshRendererに統合することが出来ます。
このコンポーネントは、メッシュを指定していないSkinnedMeshRendererコンポーネントがある新規GameObjectに追加してください。(分類: Source Edit Skinned Mesh Component)
利点 # SkinnedMeshRendererを統合することでメッシュを変形させる処理の回数が減り、負荷が軽くなります。 また、同じマテリアルを使用しているマテリアルスロットも統合することができるので、描画負荷も減らす事ができます。
備考 # アニメーションでメッシュのオン・オフを個別に切り替えたりすることはできなくなりますが、マテリアルに関するアニメーションは統合前のものがそのまま機能します。
このコンポーネントはメッシュ・マテリアル・BlendShape・Boundsを設定しますが、その他の設定については変更しません。 AnchorOverride等の設定を行うには、MergeSkinnedMeshのあるGameObject上のSkinnedMeshRendererを編集してください。
また、このコンポーネントは、服のメッシュや体のメッシュを統合するのには適していますが、顔のメッシュを統合するのには適していません。
BlendShapeは、頂点とBlendShapeの数に比例して負荷が大きくなる機能です。 顔のメッシュは一般的に多くのBlendShapeを持っているため、統合対象に含めると頂点数の増加により負荷が大きくなってしまいます。
同様に、体や服のメッシュのBlendShapeは固定・除去することを推奨します。 Freeze BlendShapeコンポーネントを統合対象・統合先のSkinnedMeshRendererのいずれか(または両方)に追加して、BlendShapeを固定・除去することが出来ます。 Trace and OptimizeコンポーネントのBlendShapeを自動的に固定・削除するによっても同様の効果を得ることが出来ます。
設定 # スキンメッシュレンダラー # 統合対象のSkinnedMeshRendererの一覧です。
一番下の&amp;quot;None&amp;quot;と書いてある要素にドラッグ&amp;amp;ドロップすることにより対象を追加し、Noneに戻すことにより対象を一覧から取り除きます。
静的レンダラー # 統合対象のMeshRendererの一覧です。
静的メッシュの移動・回転・変形をボーンで再現します。
一番下の&amp;quot;None&amp;quot;と書いてある要素にドラッグ&amp;amp;ドロップすることにより対象を追加し、Noneに戻すことにより対象を一覧から取り除きます。
空のレンダラーオブジェクトを削除する # 統合対象のSkinnedMeshRendererが属しているGameObjectにSkinnedMeshRenderer以外のコンポーネントが無い場合、そのGameObjectをヒエラルキーから取り除くオプションです。
有効無効状態が統合先と異なるレンダラーを統合しない # 統合先のSkinnedMeshRendererと有効無効の状態が異なるSkinnedMeshRendererやMeshRendererが統合対象の中に含まれている場合、それらをビルド時に統合対象から除外するオプションです。
マテリアルの統合 # 複数の(Skinned)MeshRendererで使用されているマテリアルがある場合、ここに一覧で表示されます。
統合するにチェックを入れることで、それらのマテリアルスロットを1つに統合します。これはDrawCallを削減します。</description></item><item><title>Freeze BlendShape</title><link>https://vpm.anatawa12.com/avatar-optimizer/beta/ja/docs/reference/freeze-blendshape/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vpm.anatawa12.com/avatar-optimizer/beta/ja/docs/reference/freeze-blendshape/</guid><description>Freeze BlendShape # BlendShapeをメッシュに固定し、除去することが出来ます。
このコンポーネントは、SkinnedMeshRendererコンポーネントのあるGameObjectに追加してください。(分類: Modifying Edit Skinned Mesh Component)
利点 # BlendShapeの固定・除去には以下の効果があります。
BlendShapeの値が0以外のときは処理負荷が発生するため、値をアニメーション等で変更しないBlendShapeは固定すると負荷が軽くなります。 値が常に0である場合でも、固定することでアバターの容量を削減することができます。 備考 # 固定すると、アニメーションでの値変更は出来なくなります。
設定 # BlendShapeの一覧が表示されるので、固定・除去対象のBlendShapeを選択してください。</description></item><item><title>Merge ToonLit Material</title><link>https://vpm.anatawa12.com/avatar-optimizer/beta/ja/docs/reference/merge-toonlit-material/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vpm.anatawa12.com/avatar-optimizer/beta/ja/docs/reference/merge-toonlit-material/</guid><description>Merge ToonLit Material # 手動でテクスチャを並び替えることにより、VRChat/Mobile/Toon Litのマテリアルを1つのマテリアルに統合します。
このコンポーネントは、SkinnedMeshRendererコンポーネントのあるGameObjectに追加してください。(分類: Modifying Edit Skinned Mesh Component)
現在、このコンポーネントは大きな需要があると見られるVRChat/Mobile/Toon Litシェーダーのみをサポートしています。 他のシェーダーのサポートも追加する可能性があります。(サードパーティシェーダーでも対応します) もし対応して欲しいシェーダーがあれば、issueを書いてください。
設定 # 統合したマテリアルを追加をクリックして、統合後のマテリアルを追加します。 それぞれのマテリアルについて、統合対象のマテリアルを複数選択することが出来ます。 統合対象を追加をクリックするか、ドロップダウンメニューからマテリアルを選択してください。 統合対象のマテリアルについて、テクスチャの配置場所を設定する必要があります。 X, Y, W, Hの値を調整してテクスチャをお好みの位置にを合わせてください。 プレビューを生成をクリックすると、統合後のテクスチャのプレビューがそれぞれ生成されます。</description></item><item><title>Remove Mesh By BlendShape</title><link>https://vpm.anatawa12.com/avatar-optimizer/beta/ja/docs/reference/remove-mesh-by-blendshape/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vpm.anatawa12.com/avatar-optimizer/beta/ja/docs/reference/remove-mesh-by-blendshape/</guid><description>Remove Mesh By BlendShape # 指定されたBlendShapeによって動かされる頂点とそのポリゴンを削除します。
このコンポーネントは、SkinnedMeshRendererコンポーネントのあるGameObjectに追加してください。(分類: Modifying Edit Skinned Mesh Component)
利点 # 服で隠れていたりして見えないような部分のメッシュを削除すると、見た目に影響させずに描画負荷やBlendShapeの処理負荷などを減らして軽量化することができます。 このコンポーネントを使用すると、多くの素体に含まれている貫通防止用のBlendShapeを利用して簡単にメッシュを削除することができます。
設定 # BlendShapeの一覧が表示されるので、BlendShapeを選択してください。 もし選択されたBlendShapeが頂点を許容差より大きく動かしていたら、その頂点を削除します。</description></item><item><title>Remove Mesh in Box</title><link>https://vpm.anatawa12.com/avatar-optimizer/beta/ja/docs/reference/remove-mesh-in-box/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vpm.anatawa12.com/avatar-optimizer/beta/ja/docs/reference/remove-mesh-in-box/</guid><description>Remove Mesh in Box # 箱で指定した範囲内のポリゴンを削除します。
このコンポーネントは、SkinnedMeshRendererコンポーネントのあるGameObjectに追加してください。(分類: Modifying Edit Skinned Mesh Component)
利点 # 服で隠れていたりして見えないような部分のメッシュを削除すると、見た目に影響させずに描画負荷やBlendShapeの処理負荷などを減らして軽量化することができます。
設定 # 数値を調整して箱を追加します。 それぞれの箱について、中心位置、大きさ、角度を変更することが出来ます。(ローカル座標で指定します)
Edit This Boxをクリックして下図のようなギズモを表示します。箱の大きさ、位置、角度を調整することが出来ます。
例 # 上側の図にある箱の範囲内のメッシュが、下側の図のように削除されます。</description></item><item><title>Clear Endpoint Position</title><link>https://vpm.anatawa12.com/avatar-optimizer/beta/ja/docs/reference/clear-endpoint-position/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vpm.anatawa12.com/avatar-optimizer/beta/ja/docs/reference/clear-endpoint-position/</guid><description>Clear Endpoint Position # このコンポーネントは、Endpoint Positionの値を0に置換し、_EndPhysBoneGameObjectを追加します。
このコンポーネントはPhysBoneコンポーネントがあるGameObjectに追加してください。
今のところ、このコンポーネントに設定項目はありませんが、ボタンが1つあります。 適用して今すぐcomponentを削除するをクリックすると、 この操作が適用され、コンポーネントが削除されます。 アバターを制作するときに便利かもしれません。</description></item><item><title>Merge Bone</title><link>https://vpm.anatawa12.com/avatar-optimizer/beta/ja/docs/reference/merge-bone/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vpm.anatawa12.com/avatar-optimizer/beta/ja/docs/reference/merge-bone/</guid><description> Merge Bone # このコンポーネントがGameObjectに付いている場合、そのGameObjectは親GameObjectに統合されて取り除かれます。 また、統合対象にその他のコンポーネントが付属している場合はそれらも削除されます。
もし親のGameObjectにもMerge Boneコンポーネントが付いていた場合、2つのGameObjectはその更に親のGameObjectに統合されます。
このコンポーネントが付いているGameObjectの全ての子GameObjectは、その親GameObjectの子になります。
設定 # 名前の競合を避ける 統合時に子GameObjectの名前を変更することで、名前の重複によってアニメーションが正しく動かなくなる問題を回避します。</description></item><item><title>Merge PhysBone</title><link>https://vpm.anatawa12.com/avatar-optimizer/beta/ja/docs/reference/merge-physbone/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vpm.anatawa12.com/avatar-optimizer/beta/ja/docs/reference/merge-physbone/</guid><description>Merge PhysBone # このコンポーネントは、複数のPhysBoneコンポーネントを1つに統合します。 MultiChildTypeはIgnoreになります。
このコンポーネントは新規GameObjectに追加してください。
設定 # コンポーネント # 統合対象のPhysBoneコンポーネントの一覧です。
一番下の&amp;quot;None&amp;quot;と書いてある要素にドラッグ&amp;amp;ドロップすることにより対象を追加し、Noneに戻すことにより対象を一覧から取り除きます。
オーバーライド(上書き) # 上記の設定項目の下は、PhysBoneの設定項目のようになっています。 それぞれの項目について、統合対象の項目から値をコピーする場合はCopy(すべての統合対象で値が同じ場合のみ有効)、 代わりに新しい値を設定する場合はOverrideを選択してください。
コライダーについては、Mergeを選択して統合対象のコライダー一覧を統合することも出来ます。
Endpoint Positionについては、Clearを選択してClear Endpoint Positionを使用することもできます。</description></item><item><title>Remove Zero Sized Polygon</title><link>https://vpm.anatawa12.com/avatar-optimizer/beta/ja/docs/reference/remove-zero-sized-polygon/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vpm.anatawa12.com/avatar-optimizer/beta/ja/docs/reference/remove-zero-sized-polygon/</guid><description>Remove Zero Sized Polygon # 面積がゼロのポリゴンを削除します。
このコンポーネントは、SkinnedMeshRendererコンポーネントのあるGameObjectに追加してください。
このコンポーネントはビルドの最後の方で実行されるため、Modifying Edit Skinned Mesh Component ではありません。
このコンポーネントをMerge Skinned Meshの統合対象となるSkinnedMeshRendererに追加しても効果がありません。
利点 # 面積がゼロのポリゴンを削除することで、描画負荷を減らすことができます。 見た目に影響を与えることはほとんどありません。
備考 # モデルファイルでのポリゴンの大きさがゼロであっても、シェーダーによって何かを描画していることがあるため、見た目に影響が出ることがあります。
設定 # 今のところ、このコンポーネントに設定項目はありません。
備考 # このコンポーネントはTrace and Optimizeコンポーネントによって自動的に追加されます。 このコンポーネントを手動で追加するよりも、Trace and Optimizeを使うことをお勧めします。</description></item><item><title>Make Children</title><link>https://vpm.anatawa12.com/avatar-optimizer/beta/ja/docs/reference/make-children/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vpm.anatawa12.com/avatar-optimizer/beta/ja/docs/reference/make-children/</guid><description>Make Children # ビルド時に、指定されたGameObjectをこのGameObjectの子にします。
このコンポーネントは非推奨です。
この機能はアバターの最適化と関係がないため、今後製作予定の非破壊アバター改変ユーティリティのコンポーネントに置き換えられる予定です。</description></item><item><title>コンポーネントにAvatar Optimizerとの互換性をもたせる</title><link>https://vpm.anatawa12.com/avatar-optimizer/beta/ja/docs/developers/make-your-components-compatible-with-aao/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vpm.anatawa12.com/avatar-optimizer/beta/ja/docs/developers/make-your-components-compatible-with-aao/</guid><description>コンポーネントにAvatar Optimizerとの互換性をもたせる # このページでは以下の2つのことを説明します。
コンポーネントはどのような場合にAvatar Optimizerと非互換になるか どのように互換性を改善するか もし質問があれば、お気軽にfediverseで@anatawa12@misskey.niri.laにご連絡ください。
コンポーネントはどのような場合にAvatar Optimizerと非互換になるか # Avatar Optimizerが処理する時点でアバターにコンポーネントが存在している場合、そのコンポーネントはAvatar Optimizerと互換性が無い可能性があります。
Avatar Optimizerはコンポーネント等に対するガベージコレクションシステムを実装しているため、最適化時にアバターに存在するすべてのコンポーネントのことを知る必要があります。
未知のコンポーネントによる問題を避けるため、Avatar Optimizerは未知のコンポーネントが以下のようなものであると仮定します。(この仮定は将来的に変更される可能性があります。)
副作用のあるコンポーネントである。 コンポーネントが参照している全てのコンポーネントに依存している。 この仮定は正しくない可能性があるため、Avatar Optimizerは未知のコンポーネントを見つけた場合に以下のような警告を生成します。
どのように互換性を改善するか # Avatar Optimizerが処理する前にコンポーネントを削除出来る場合は、そのようにしてください。 削除出来ない場合はAvatar Optimizerにコンポーネントを登録してください。
コンポーネントを削除する # コンポーネントを削除する方法はいくつかあります。
ツールがNDMF1を使用した非破壊ツールの場合は、NDMFのOptimization phaseより前、 またはOptimization phaseの中で(BeforePluginを用いて)com.anatawa12.avatar-optimizer plugin より前にコンポーネントを削除することを推奨します。
ツールがNDMF1を使用していない非破壊ツールの場合は、NDMFのOptimization phaseより前にコンポーネントを削除することを推奨します。 この場合、現在のNDMFはVRCSDKのRemoveAvatarEditorOnlyの直前であるorder -1025でOptimization phaseを実行するので、 それより小さいcallbackOrderを指定したIVRCSDKPreprocessAvatarCallbackでコンポーネントを削除してください。
ツールのコンポーネントがデータを保持する役割しかなく、ビルド時には意味を持っていない場合、 IVRCSDKPreprocessAvatarCallbackを用いてAvatar Optimizerが処理する前にコンポーネントを削除することを推奨します。 IVRCSDKPreprocessAvatarCallbackの順序については上記を参照してください。
コンポーネントを登録する # ツールのコンポーネントをAvatar Optimizerの処理より後に残しておきたい場合、 Avatar Optimizerにコンポーネントの情報を登録できます。
まず、Avatar OptimizerのAPIを呼び出すために、assembly definitionファイル2を(存在しない場合)作成してください。
次に、asmdefファイルのアセンブリ参照にcom.anatawa12.avatar-optimizer.api.editorを追加してください。
ツールをAvatar Optimizerに依存させたくない場合、Version Definesを使用してください。 Avatar Optimizer 1.6.0より前にはAPIが無く、Avatar Optimizer 2.0.0ではAPIの互換性を破壊する可能性があるため、 バージョンの範囲を[1.6,2.0)(または、将来的に追加されたAPIを用いる必要がある場合、より厳密に [1.7,2.0)など)のように指定することを推奨します。
続いて、ツールのコンポーネントについてのComponentInformationを定義してください。
#if AVATAR_OPTIMIZER &amp;amp;&amp;amp; UNITY_EDITOR [ComponentInformation(typeof(YourComponent))] internal class YourComponentInformation : ComponentInformation&amp;lt;YourComponent&amp;gt; { protected override void CollectMutations(YourComponent component, ComponentMutationsCollector collector) { // call methods on the collector to tell about the component } protected override void CollectDependency(YourComponent component, ComponentDependencyCollector collector) { // call methods on the collector to tell about the component } } #endif CollectMutationsでは、コンポーネントの処理によって変更される可能性があるプロパティを登録します。</description></item><item><title>基本的な使い方</title><link>https://vpm.anatawa12.com/avatar-optimizer/beta/ja/docs/tutorial/basic-usage/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vpm.anatawa12.com/avatar-optimizer/beta/ja/docs/tutorial/basic-usage/</guid><description>基本的な使い方 # 自動最適化を使用する # アバターには自動的に行える最適化がいくつかあります。
使用していないBlendShape(シェイプキー)1の削除 BlendShapeの値が0以外のときは処理負荷が発生するため、値をアニメーション等で変更しないBlendShapeは固定すると負荷が軽くなります。 値が常に0である場合でも、固定することでアバターの容量を削減することができます。 使われていないPhysBone等の削除 揺らす対象として存在するメッシュが常に無効になっているPhysBoneなどのように、揺らす必要のないPhysBoneが有効になっている場合は計算負荷が余分に発生してしまいます。 アニメーションしたりPhysBoneで揺らしたりすることのないボーンの統合 服のボーンを素体のボーンに入れ子状にして着せるような場合には、それ自身を動かすことがないボーンが多く発生します。そのようなボーンは余分な負荷を発生させてしまいます。 AvatarOptimizerでは、アバターのルートにTrace And Optimizeコンポーネントを追加するだけで、これらの最適化を自動で行うことができます！
メッシュを統合してMesh Renderersを減らす # Avatar Optimizerを使用すると簡単にSkinned Meshを統合することができます！ Skinned Meshを統合すると個別にオン・オフできなくなりますが、統合することで軽量化に繋がります！
なぜSkinned Meshを統合するの？
Skinned Meshを統合することでメッシュを変形させる処理の回数が減り、負荷が軽くなります。 また、MergeSkinnedMeshでは、同じマテリアルを使用しているマテリアルスロットも統合することができるので、描画負荷も減らす事ができます。
一番単純なパターンとして、Anonちゃんを軽量化してみます。
まず初めに、統合先のGameObjectを作りましょう。 アバターのGameObjectを右クリックから Create Empty をクリックして新たなGameObjectを作ります。 そうしたら、わかりやすい名前に変えておいてください。この記事ではAnon_Mergedとします。
次に、Anon_MergedにMerge Skinned Meshコンポーネントを追加しましょう。
するとMerge Skinned MeshコンポーネントとSkinned Mesh Rendererコンポーネントが追加されます。 後者が統合先のメッシュ2になります。
統合したいメッシュをMerge Skinned Meshコンポーネントに楽に指定するために、Anon_Mergedを選択した状態でinspectorをロックしましょう。 こうすることで複数のメッシュをまとめてドラックアンドドロップできるようになります。3
それでは、顔のメッシュであるBody以外のメッシュをHierarchyで選択し、Merge Skinned Meshコンポーネント内のSkinned Renderersにドラックアンドドロップで指定しましょう！
なせ顔のメッシュは統合しないの？
BlendShape(シェイプキー)は頂点数とBlendShape数の積に比例して重くなる処理です。 そのため、BlendShapeの数が多い顔のメッシュを頂点数の多い体のメッシュと統合するとかえって重くなってしまうため、顔は別のままにするのを推奨しています。
続いて、Anon_Mergedの設定をしましょう！
Merge Skinned Meshは諸事情4により、ボーン、メッシュ、マテリアル、BlendShape、Bounds以外の設定を自動的には行いません。 そのため、統合先のメッシュ(Merge Skinned Meshコンポーネントと同時に追加されたSkinned Mesh Rendererコンポーネント)にあるAnchor Override, Root Bone等の項目には別途手動で設定が必要です。 Anchor Overrideには素体(Body等)で設定されているものを、Root BoneにはHipsを指定すると上手くいくことが多いと思います。</description></item></channel></rss>