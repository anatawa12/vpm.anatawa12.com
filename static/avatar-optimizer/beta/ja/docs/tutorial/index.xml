<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>チュートリアル on Avatar Optimizer (1.7.2)</title><link>https://vpm.anatawa12.com/avatar-optimizer/beta/ja/docs/tutorial/</link><description>Recent content in チュートリアル on Avatar Optimizer (1.7.2)</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://vpm.anatawa12.com/avatar-optimizer/beta/ja/docs/tutorial/index.xml" rel="self" type="application/rss+xml"/><item><title>基本的な使い方</title><link>https://vpm.anatawa12.com/avatar-optimizer/beta/ja/docs/tutorial/basic-usage/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vpm.anatawa12.com/avatar-optimizer/beta/ja/docs/tutorial/basic-usage/</guid><description>基本的な使い方 # 自動最適化を使用する # アバターには自動的に行える最適化がいくつかあります。
使用していないBlendShape(シェイプキー)1の除去 BlendShapeの値が0以外のときは処理負荷が発生するため、値をアニメーション等で変更しないBlendShapeは固定すると負荷が軽くなります。 値が常に0である場合でも、固定することでアバターの容量を削減することができます。 使われていないPhysBone等の削除 揺らす対象として存在するメッシュ2が常に無効になっているPhysBoneなどのように、揺らす必要のないPhysBoneが有効になっている場合は計算負荷が余分に発生してしまいます。 アニメーションしたりPhysBoneで揺らしたりすることのないボーンの統合 服のボーンを素体のボーンに入れ子状にして着せるような場合には、それ自身を動かすことがないボーンが多く発生します。そのようなボーンは余分な負荷を発生させてしまいます。 AvatarOptimizerでは、アバターのルートにAAO Trace And Optimizeコンポーネントを追加するだけで、これらの最適化を自動で行うことができます！
アバターをアップロードする # AAO Trace and Optimizeコンポーネントを付けた状態で、試しにアバターをアップロードしてみましょう！ AAO: Avatar Optimizerは非破壊改変ツールであり、Playモードに入るときかアバターをビルドするときに処理が行われるため、アップロードを行うのに特別な手順は必要ありません。 通常と同じように、VRCSDKのControl Panelからアバターをアップロードしてください。
ただし、Android(Quest)向けアップロードを行う場合などにおいて、Avatar Optimizerの最適化等によって制限の範囲内に収まるにも関わらず、VRCSDKのビルド前チェックの時点で制限を超過していてアップロードボタンが押せなくなっている場合には、以下の方法が使用できます。
Manual bake avatarを使用して生成したアバターをアップロードする。
(アバターのGameObjectを選択した後、Unityウィンドウ上部のToolsから、NDM Frameworkの中にあるManual bake avatarを押す) Sayamame-beansによるUpload without pre-checkを使用してアップロードする。 UploadせずにPerformance Rankを見る方法 # 非破壊改変ツールを使用した改変では、VRCSDKのControl Panel上のPerformance Rankはあてにならなくなります。
その代わりとして、Playモードに入った際のPerformance Rankをanatawa12&amp;rsquo;s Gist PackのActual Performance Windowを使用して確認することができます。 詳しくはanatawa12&amp;rsquo;s Gist Packの使い方およびActual Performance Windowのドキュメントを参照してください。
貫通防止用BlendShapeを利用してポリゴンを減らす # 服で隠れていたりして見えないような部分のメッシュを削除すると、見た目に影響させずに描画負荷やBlendShapeの処理負荷などを減らして軽量化することができます。 これを簡単に実現するために、AvatarOptimizerでは多くの素体に含まれている貫通防止用のBlendShapeを利用してメッシュを削除することができます！
素体のメッシュにAAO Remove Mesh By BlendShapeコンポーネントを追加しましょう！
想定外の部位が削除されてしまわないかを確認するためにプレビューのために切り替えたBlendShapeの値を自動的に変更するにチェックし、 削除したい部位の貫通防止用BlendShapeを下の一覧から選択しましょう！
消えて欲しい箇所が消えない場合や、消えて欲しくない箇所が消えてしまう場合には、許容差の値を調整する必要があります！ 許容差は、頂点がBlendShapeによってどのぐらい動けば削除するかを決定するものです。 前者の場合は値を少し大きく、後者の場合は値を少し小さくしましょう！</description></item></channel></rss>