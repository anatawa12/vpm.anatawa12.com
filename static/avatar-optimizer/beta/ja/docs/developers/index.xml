<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>開発者向け on Avatar Optimizer (1.6.0-beta.4)</title><link>https://vpm.anatawa12.com/avatar-optimizer/beta/ja/docs/developers/</link><description>Recent content in 開発者向け on Avatar Optimizer (1.6.0-beta.4)</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://vpm.anatawa12.com/avatar-optimizer/beta/ja/docs/developers/index.xml" rel="self" type="application/rss+xml"/><item><title>ツールをAvatar Optimizerとの互換性をもたせる</title><link>https://vpm.anatawa12.com/avatar-optimizer/beta/ja/docs/developers/make-your-tool-compatible-with-aao/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vpm.anatawa12.com/avatar-optimizer/beta/ja/docs/developers/make-your-tool-compatible-with-aao/</guid><description>ツールをAvatar Optimizerとの互換性をもたせる # このページでは以下の２つのことを説明します。
どのようなときにツールがAvatar Optimizerと非互換になるか どのように互換性を改善するか もし質問があればfediverseで@anatawa12@misskey.niri.laに気軽に聞いてください。
どのようなときにツールがAvatar Optimizerと非互換になるか # もしあなたのツールがコンポーネントを追加せず、ビルド時に何もしないのであれば、すでにAvatarOptimizerと互換性があります！
もしあなたのツールがコンポーネントをアバターに追加する場合、そのツールはAvatar Optimizerと非互換である可能性があります
Avatar Optimizerはコンポーネントに対するガベージコレクションを実装しているため、Avatar Optimizerはアバターに存在する すべてのコンポーネントについて知る必要があります。
未知なコンポーネントの問題を避けるため、Avatar Optimizerは道のコンポーネントが以下のようなものであると仮定します。(この仮定は将来的に変更される可能性があります。)
副作用があるコンポーネントである コンポーネントによって参照されてるコンポーネントに依存している しかし、この仮定は正しくない可能性があるので、Avatar Optimizerは未知のコンポーネントを見つけた場合、以下のような警告を生成します。
もしあなたのツールがNDMF1をベースにしていない非破壊ツールで、Play modeに入るときに適用されるツールの場合、 Avatar Optimizerがそのツールより前に適用される可能性があるため、非互換です。
どのように互換性を改善するか # NDMFを使用した非破壊ツールの場合 # もしあなたのツールがNDMF1を使用した非破壊ツールの場合、Avatar Optimizerが実行される前にそのツールのコンポーネントを削除してください。
Avatar OptimizerはOptimization passに処理を実行するため、もしあなたのツールがOptimization passに何もしないのであれば、特に問題がありません。 もしあなたのツールがOptimization passになにか実行する場合、BeforePluginを用いてAvatar Optimizerの前に実行するようにしてください。 Avatar OptimizerのNDMFのQualifiedNameはcom.anatawa12.avatar-optimizerです。
もしあなたのツールがAvatar Optimizerよりあとにあなたのコンポーネントを用いて実行する必要がある場合、 Avatar Optimizerにコンポーネントを登録してください.
NDMFを使用していない非破壊ツールの場合 # もしあなたのツールがNDMF1を使用していない非破壊ツールの場合、NDMFを使用するのを検討してください。
もしあなたのツールがPlayモードに入るときに適用される場合、Avatar Optimizerとの処理順を保証するためにはNDMFを使用する必要があります。 もしあなたのツールがPlayモードに入るときに適用されない場合、NDMFを使用しなくても問題ないことは多いです。
もしあなたのツールでNDMFを使用したくない場合、Avatar Optimizerが実行される前にそのツールのコンポーネントを削除してください。 これを達成するためにはNDMFのOptimization passの実行より前にあなたのツールを実行するようにしてください。 現在、NDMFはOptimization passをVRCSDKのRemoveAvatarEditorOnlyの直前のorder -1025で実行するので、 あなたのツールのIVRCSDKPreprocessAvatarCallbackをそれより小さいcallbackOrderで登録してください。
もしあなたのツールがAvatarOptimizerの実行後(NDMFのOptimization passのあと)に処理したい場合、Avatar Optimizerにコンポーネントを登録してください.
データを保持するだけのコンポーネントを持つツールの場合 # もしあなたのツールのコンポーネントがビルド時に意味を持たず、情報保持のための場合、 AvatarOptimizerの処理の前にIVRCSDKPreprocessAvatarCallbackでコンポーネントを削除するか、Avatar Optimizerにコンポーネントを登録してください。</description></item></channel></rss>