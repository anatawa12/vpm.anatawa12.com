<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Docs on Avatar Optimizer (1.8.5)</title><link>https://vpm.anatawa12.com/avatar-optimizer/ja/docs/</link><description>Recent content in Docs on Avatar Optimizer (1.8.5)</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://vpm.anatawa12.com/avatar-optimizer/ja/docs/index.xml" rel="self" type="application/rss+xml"/><item><title>基本コンセプト</title><link>https://vpm.anatawa12.com/avatar-optimizer/ja/docs/basic-concept/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vpm.anatawa12.com/avatar-optimizer/ja/docs/basic-concept/</guid><description>Avatar Optimizerの基本コンセプト # このページでは、Avatar Optimizerの基本コンセプトについて説明します。
Avatar Optimizerとは？ # Avatar Optimizerは、アバターを非破壊的に最適化するためのツールです。 このツールはVRChatアバター向けに設計されていましたが、NDMFでサポートされている他のプラットフォームのアバターにも使用できるかもしれません。
(Avatar Optimizerにおいて、)「非破壊的」とは以下のことを指します。
Avatar Optimizerを使用するためにプレハブを展開(unpack)する必要がないこと。 Avatar Optimizerを使用するために必要なことは、コンポーネントを追加することだけです。 Avatar Optimizerはプロジェクトに保存されているアバターに一切影響を与えず、ビルド中に生成されるアバターデータの一時コピーにのみ影響すること。 なお、VRChat以外のプラットフォームのアバターに対するサポートは主にコミュニティベースであり、Avatar Optimizerの開発チームにはサポートされない場合があります。
Avatar Optimizerの目的は何ですか？ # このツールは、アバターの見た目を殆ど変化させることなく、アバターのパフォーマンスを非破壊的に最適化できるようにすることを目的として設計されています。 そのため、このツールでアバターの振る舞いを変更することは意図していません。
意図していない動作によるアバターの振る舞いの変更は、一部のユースケースで有用かもしれませんが、バグとして扱われます。
そのバグが殆どのユースケースに影響を与えない場合、バグの修正を一時的に見合わせることがありますが、バグによる振る舞いは他のコンポーネントで考慮されないかもしれません。
Avatar Optimizerの振る舞いは将来のバージョンでも安定していますか？ # Avatar Optimizerはバージョン管理にセマンティックバージョニングを使用しており、コンポーネントの振る舞いには主にセマンティックバージョニングのルールを適用しています。
すなわち、アバターに既に付いているコンポーネントの振る舞いは、同じメジャーバージョン内では変更されないことが保証されます。
既存のコンポーネントに対して新しい機能が追加された場合には、それ以降にアバターに新たに追加されたコンポーネントの振る舞いのみ、それ以前のものから変更されることがあります。
一部のバグでは、そのバグを修正することによってコンポーネントの振る舞いが大幅に変更される場合があります。 そのような場合には、新たな振る舞いを有効化するためのオプションを追加します。
アバターに既に付いているコンポーネントでは、このオプションをデフォルトで無効にすることで以前までの振る舞いを維持し、 アバターに新たに追加されたコンポーネントでは、このオプションをデフォルトで有効にすることで、バグが修正された新しい動作を行います。
こういったコンポーネントの振る舞いの維持には、いくつか例外があります。
コンポーネントのデバッグ専用の機能は、上記のルールに従うことが保証されません。
例えば、AAO Trace and OptimizeコンポーネントのDebug Optionsは変更される可能性が常にあります。 実験的な機能としてマークされている機能は、上記のルールに従うことが保証されません。 AAO Trace and Optimizeコンポーネントの振る舞いは、新しい最適化を実装することによって変更される可能性があります。
ただし、AAO Trace and Optimizeコンポーネントのデフォルト設定では、アバターの振る舞いや見た目に影響を与えないようにしているため、この変更はアバターに一切影響を与えないはずです。 これら以外で不自然な動作や奇妙な動作などに遭遇した場合は、まずFAQをご覧ください。</description></item><item><title>よくある質問</title><link>https://vpm.anatawa12.com/avatar-optimizer/ja/docs/faq/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vpm.anatawa12.com/avatar-optimizer/ja/docs/faq/</guid><description>よくある質問 # Avatar Optimizerに関するよくある質問のリストです。 他に質問がある場合は、GitHub Discussions、NDMF Discord、またはFediverse (Misskey / Mastodon)でお気軽にお尋ねください。
AAO Trace and Optimizeコンポーネントを使用すると、アバターの振る舞いや見た目が変わる # AAO Trace and Optimizeコンポーネントを使用して、アバターの振る舞いや見た目が変わってしまった場合は、(アバターがAvatar Optimizerの他のコンポーネントのバグ挙動に依存していない限り、)全てバグです。 GitHub IssuesやFediverse (Misskey / Mastodon)、Twitterなどから報告をお願いします。
メッシュが視界の中にあるのに非表示になってしまう # 多くの場合、この問題はSkinned Mesh RendererのRoot Boneを指定し忘れていることが原因です。
AAO Merge Skinned MeshコンポーネントはRoot Boneの設定を自動的には行わないため、統合先のメッシュ1のRoot Boneを手動で設定する必要があります。
Modular Avatarを使用している場合は、アバターのルートにMA Mesh Settingsコンポーネントを追加して設定することにより、アバター全体のRoot BoneとBoundsを設定することができます。
AAO Merge Skinned Meshコンポーネントで統合したメッシュの明るさが他のメッシュと異なる # 多くの場合、この問題は統合先のメッシュのAnchor Overrideを指定し忘れていることが原因です。
AAO Merge Skinned MeshコンポーネントはAnchor Overrideの設定を自動的には行わないため、統合先のメッシュ1のAnchor Overrideを手動で設定する必要があります。
Modular Avatarを使用している場合は、アバターのルートにMA Mesh Settingsコンポーネントを追加して設定することにより、アバター全体のAnchor Overrideを設定することができます。
AAO Merge Skinned Meshコンポーネントを使用すると、マテリアルプロパティに対するアニメーションが競合する # この問題は既知のバグであり、現時点では競合してしまう仕様です。
マテリアルプロパティに対してアニメーションされるメッシュを統合する際は、競合しないようご注意ください。 競合する場合は警告が表示されるので、そちらを確認してください。
この問題のissue: #340</description></item><item><title>Changelog</title><link>https://vpm.anatawa12.com/avatar-optimizer/ja/docs/changelog/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vpm.anatawa12.com/avatar-optimizer/ja/docs/changelog/</guid><description>Changelog # このプロジェクトの重要な変更点は以下のとおりです。
Keep a Changelogをベースにした形式で表記されています。
1.8.5 - 2025-02-05 # Fixed # Component Validation Errors doesn&amp;rsquo;t have error source component information #1390 liltoon Angel Ring MatCap settings broken #1391 1.8.4 - 2025-01-19 # Fixed # Performance improvements #1380 Meshes merged by AutoMergeSkinnedMesh might be incorrectly removed #1381 VRM: Fix BlendShape mapping #1375 VRM: Fix Trace and Optimize incorrectly merging Skinned Meshes with different FirstPerson settings #1376 1.8.3 - 2024-12-24 # Fixed # Prefab overrides on the scene are reverted on first load of the scene at first launch #1372 Animating transform with C# named properties are broken by merge bone #1373 Animator window won&amp;rsquo;t create such animation but some script generates and it works surprisingly Errors with blendShapes with exactly same name in a mesh #1374 Such mesh can be generated with Autodesk Maya or 3ds Max Unity API denies generating such mesh with C# so AAO will rename such blendShapes to unique name to support.</description></item></channel></rss>