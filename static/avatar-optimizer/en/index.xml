<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Introduction on Avatar Optimizer (1.8.1)</title><link>https://vpm.anatawa12.com/avatar-optimizer/en/</link><description>Recent content in Introduction on Avatar Optimizer (1.8.1)</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://vpm.anatawa12.com/avatar-optimizer/en/index.xml" rel="self" type="application/rss+xml"/><item><title>Basic Concepts</title><link>https://vpm.anatawa12.com/avatar-optimizer/en/docs/basic-concept/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vpm.anatawa12.com/avatar-optimizer/en/docs/basic-concept/</guid><description>Basic Concepts of Avatar Optimizer # This page describes the basic concepts of Avatar Optimizer.
What is Avatar Optimizer? # Avatar Optimizer is a non-destructive tool that helps you optimize your avatar. This tool is initially designed for VRChat avatars, but it might be usable for other Avatars supported by NDMF.
Non-destructive means (in Avatar Optimizer):
You don&amp;rsquo;t have to unpack your prefab to apply Avatar Optimizer. What you have to do is adding component.</description></item><item><title>Frequently Asked Questions</title><link>https://vpm.anatawa12.com/avatar-optimizer/en/docs/faq/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vpm.anatawa12.com/avatar-optimizer/en/docs/faq/</guid><description>Frequently Asked Questions # Here is the list of frequently asked questions about Avatar Optimizer. If you have some other questions, please feel free to ask on the GitHub Discussions, NDMF Discord or Fediverse (Misskey / Mastodon). I&amp;rsquo;m usually use Japanese, but you can ask me with English.
The behavior or appearance of the avatar is changed when using AAO Trace and Optimize component # If the behavior or appearance of the avatar is changed when using AAO Trace and Optimize component, it is always a bug unless you depend on bugs in other components of Avatar Optimizer.</description></item><item><title>Changelog</title><link>https://vpm.anatawa12.com/avatar-optimizer/en/docs/changelog/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vpm.anatawa12.com/avatar-optimizer/en/docs/changelog/</guid><description>Changelog # All notable changes to this project are documented in this page.
The format is based on Keep a Changelog.
1.8.1 - 2024-12-01 # Fixed # Optimize Texture may break liltoon outline mask #1357 1.8.0 - 2024-11-30 # Added # AnyState to Entry/Exit optimization in Optimize Animator #1157 If AAO found animator layer only with AnyState, AAO tries to convert them to Entry / Exit pattern. Currently due to implementation there are some patterns that can be convert but but not converted.</description></item><item><title>Avatar Global Components</title><link>https://vpm.anatawa12.com/avatar-optimizer/en/docs/component-kind/avatar-global-components/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vpm.anatawa12.com/avatar-optimizer/en/docs/component-kind/avatar-global-components/</guid><description>Avatar Global Components # Avatar Global Component is a kind of component which should be added to an avatar root and applied to whole avatar.
The &amp;ldquo;avatar root&amp;rdquo; is the GameObject at the top of the avatar hierarchy. For example, in the case of a VRChat avatar, the &amp;ldquo;avatar root&amp;rdquo; is the GameObject that has the VRC Avatar Descriptor component.
If you add any Avatar Global Components to anything other than the avatar root, you&amp;rsquo;ll see error on the inspector and will not have any effect.</description></item><item><title>Trace And Optimize</title><link>https://vpm.anatawa12.com/avatar-optimizer/en/docs/reference/trace-and-optimize/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vpm.anatawa12.com/avatar-optimizer/en/docs/reference/trace-and-optimize/</guid><description>Trace And Optimize (T&amp;amp;O) # Previously known as Automatic Configuration
This component will trace your avatar and optimize your avatar automatically. You can enable/disable some automatic optimization features with checkboxes.
This component should be added to an avatar root. (Kind: Avatar Global Component)
Trace and Optimize is quite carefully designed under the premise that &amp;ldquo;never let it affect the appearance.&amp;rdquo;
So, if any problems occur, such as appearance is affected or some gimmick stops working, they are all caused by bugs in AAO, without exception.</description></item><item><title>UnusedBonesByReferencesTool</title><link>https://vpm.anatawa12.com/avatar-optimizer/en/docs/reference/unused-bones-by-references-tool/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vpm.anatawa12.com/avatar-optimizer/en/docs/reference/unused-bones-by-references-tool/</guid><description>UnusedBonesByReferencesTool # Marks it as EditorOnly that bones referenced only from EditorOnly meshes.
This component should be added to an avatar root. (Kind: Avatar Global Component)
This component is obsolete. You should use Remove unused Objects of Trace and Optimize instead. This component will never get algorithm improvements. This is port of UnusedBonesByReferencesTool by Narazaka but run at build time.</description></item><item><title>Edit Skinned Mesh Components</title><link>https://vpm.anatawa12.com/avatar-optimizer/en/docs/component-kind/edit-skinned-mesh-components/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vpm.anatawa12.com/avatar-optimizer/en/docs/component-kind/edit-skinned-mesh-components/</guid><description>Edit Skinned Mesh Components # Edit Skinned Mesh Component is a kind of component which should be added to a GameObject which has a SkinnedMeshRenderer component, and applies some modification to the SkinnedMeshRenderer.
There are two sub-kinds.
Source Component # This kind of component will produce Mesh and some other properties of SkinnedMeshRenderer.
Following components are Source Edit Skinned Mesh Component.
MergeSkinnedMesh
This component will produce mesh from other (Skinned)MeshRenderers.</description></item><item><title>Merge Skinned Mesh</title><link>https://vpm.anatawa12.com/avatar-optimizer/en/docs/reference/merge-skinned-mesh/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vpm.anatawa12.com/avatar-optimizer/en/docs/reference/merge-skinned-mesh/</guid><description>Merge Skinned Mesh (MergeSMR) # Merges one or more SkinnedMeshRenderers and MeshRenderers into one SkinnedMeshRenderer.
This component should be added to a new GameObject which has a SkinnedMeshRenderer component without Mesh specified. (Kind: Source Edit Skinned Mesh Component)
Trace And Optimize will automatically do the same process, so in most cases you do not need to use this component. Benefits # Merging SkinnedMeshRenderer will reduce number of deforming mesh (skinning).</description></item><item><title>Freeze BlendShape</title><link>https://vpm.anatawa12.com/avatar-optimizer/en/docs/reference/freeze-blendshape/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vpm.anatawa12.com/avatar-optimizer/en/docs/reference/freeze-blendshape/</guid><description>Freeze BlendShape # Freeze &amp;amp; remove BlendShape from the mesh.
This component should be added to a GameObject which has a SkinnedMeshRenderer component. (Kind: Modifying Edit Skinned Mesh Component)
Trace And Optimize will automatically do the same process, so in most cases you do not need to use this component. Benefits # Freezing &amp;amp; removing BlendShapes has the following benefits.
For BlendShapes with non-zero weight, freezing BlendShapes will reduce processing cost.</description></item><item><title>Merge ToonLit Material</title><link>https://vpm.anatawa12.com/avatar-optimizer/en/docs/reference/merge-toonlit-material/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vpm.anatawa12.com/avatar-optimizer/en/docs/reference/merge-toonlit-material/</guid><description>Merge ToonLit Material # Merge VRChat/Mobile/Toon Lit materials to one material by packing texture manually.
This component should be added to a GameObject which has a SkinnedMeshRenderer component. (Kind: Modifying Edit Skinned Mesh Component)
This component currently only supports VRChat/Mobile/Toon Lit because I believe there are big demands but I may add support for other shaders. (also for third-party shaders) If you want other shader support, please write a issue</description></item><item><title>Remove Mesh By BlendShape</title><link>https://vpm.anatawa12.com/avatar-optimizer/en/docs/reference/remove-mesh-by-blendshape/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vpm.anatawa12.com/avatar-optimizer/en/docs/reference/remove-mesh-by-blendshape/</guid><description>Remove Mesh By BlendShape # Remove vertices transformed by specified BlendShape and their polygons.
This component should be added to a GameObject which has a SkinnedMeshRenderer component. (Kind: Modifying Edit Skinned Mesh Component)
Benefits # By removing polygons which are hidden by clothes or something, you can reduce rendering cost, BlendShape processing cost, etc. without affecting the appearance so much.
You can use this component to easily remove polygons with BlendShapes for shrinking parts of the body, which many avatars have.</description></item><item><title>Remove Mesh By Box</title><link>https://vpm.anatawa12.com/avatar-optimizer/en/docs/reference/remove-mesh-by-box/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vpm.anatawa12.com/avatar-optimizer/en/docs/reference/remove-mesh-by-box/</guid><description>Remove Mesh By Box # Remove some polygons with any of specified boxes.
This component should be added to a GameObject which has a SkinnedMeshRenderer component. (Kind: Modifying Edit Skinned Mesh Component)
Benefits # By removing polygons which are hidden by clothes or something, you can reduce rendering cost, BlendShape processing cost, etc. without affecting the appearance so much.
Settings # Remove Polygons # You can choose whether to remove polygons in the any of boxes or outside the all boxes.</description></item><item><title>Remove Mesh By Mask</title><link>https://vpm.anatawa12.com/avatar-optimizer/en/docs/reference/remove-mesh-by-mask/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vpm.anatawa12.com/avatar-optimizer/en/docs/reference/remove-mesh-by-mask/</guid><description>Remove Mesh By Mask # Remove some polygons in any area specified by mask textures.
This component should be added to a GameObject which has a SkinnedMeshRenderer component. (Kind: Modifying Edit Skinned Mesh Component)
Benefits # By removing polygons which are hidden by clothes or something, you can reduce rendering cost, BlendShape processing cost, etc. without affecting the appearance so much.
You can use this component to easily remove polygons with alpha mask texture or mask texture for MeshDeleterWithTexture by gatosyocora.</description></item><item><title>Remove Mesh By UV Tile</title><link>https://vpm.anatawa12.com/avatar-optimizer/en/docs/reference/remove-mesh-by-uv-tile/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vpm.anatawa12.com/avatar-optimizer/en/docs/reference/remove-mesh-by-uv-tile/</guid><description>Remove Mesh By UV Tile # Remove some polygons in any area specified by UV Tile.
This component should be added to a GameObject which has a SkinnedMeshRenderer component. (Kind: Modifying Edit Skinned Mesh Component)
Benefits # By removing polygons which are hidden by clothes or something, you can reduce rendering cost, BlendShape processing cost, etc. without affecting the appearance so much.
You can use this component to easily remove polygons of models designed to hide some portion with UV Tile Discard feature of Poiyomi or lilToon.</description></item><item><title>Rename BlendShape</title><link>https://vpm.anatawa12.com/avatar-optimizer/en/docs/reference/rename-blendshape/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vpm.anatawa12.com/avatar-optimizer/en/docs/reference/rename-blendshape/</guid><description>Rename BlendShape # Renames BlendShapes in the Mesh.
If renamed name is duplicated, it will merge the BlendShapes into one.
This component should be added to a GameObject which has a SkinnedMeshRenderer component. (Kind: Modifying Edit Skinned Mesh Component)
Settings # You&amp;rsquo;ll see the list of BlendShape mapping.
Click upper right &amp;lsquo;+&amp;rsquo; button to add new mapping.
If the renamed name is duplicated, it will be shown in yellow color to indicate that it will be merged.</description></item><item><title>Clear Endpoint Position</title><link>https://vpm.anatawa12.com/avatar-optimizer/en/docs/reference/clear-endpoint-position/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vpm.anatawa12.com/avatar-optimizer/en/docs/reference/clear-endpoint-position/</guid><description>Clear Endpoint Position # This component will replace EndpointPosition to 0 with adding _EndPhysBone GameObject.
This component should be added to a GameObject which has PhysBone Components.
This component doesn&amp;rsquo;t have any configuration for now but there&amp;rsquo;s one button on the view. Clicking Apply and Remove component will applies this operation and removes this component. This may be useful for developing avatars.</description></item><item><title>Merge Bone</title><link>https://vpm.anatawa12.com/avatar-optimizer/en/docs/reference/merge-bone/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vpm.anatawa12.com/avatar-optimizer/en/docs/reference/merge-bone/</guid><description>Merge Bone # Trace And Optimize will automatically do the same process, so in most cases you do not need to use this component. If you add this component to some GameObject, the GameObject will be removed and merged to parent GameObject. Also, if some other components are attached to the target GameObject, they will be removed too.
If the parent GameObject also have Merge Bone component, two GameObjects are merged to their further parent GameObject.</description></item><item><title>Merge PhysBone</title><link>https://vpm.anatawa12.com/avatar-optimizer/en/docs/reference/merge-physbone/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vpm.anatawa12.com/avatar-optimizer/en/docs/reference/merge-physbone/</guid><description>Merge PhysBone (MergePB) # This component merges multiple PhysBone Components into one Component with MultiChildType == Ignore.
This component should be added to a new GameObject.
Notes # Merge target PhysBones must be children of the same GameObject. Alternatively, you can use Make Children of Me option.
This component will create a new PhysBone root GameObject and make the bones swayed by merge target PhysBones into children of this GameObject.</description></item><item><title>Remove Zero Sized Polygon</title><link>https://vpm.anatawa12.com/avatar-optimizer/en/docs/reference/remove-zero-sized-polygon/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vpm.anatawa12.com/avatar-optimizer/en/docs/reference/remove-zero-sized-polygon/</guid><description>Remove Zero Sized Polygon # Remove polygons whose area are zero.
This component should be added to a GameObject which has a SkinnedMeshRenderer component.
Since this component works very late in the build process, this component is NOT Modifying Edit Skinned Mesh Component.
Adding this component to the SkinnedMeshRenderers to be merged by Merge Skinned Mesh component has no effect.
Benefits # By removing polygons whose area are zero, you can reduce rendering cost.</description></item><item><title>Make Children</title><link>https://vpm.anatawa12.com/avatar-optimizer/en/docs/reference/make-children/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vpm.anatawa12.com/avatar-optimizer/en/docs/reference/make-children/</guid><description>Make Children # These specified objects will be the children of this GameObject at build time.
This component is deprecated.
This function is not related to avatar optimization, so this component will be replaced by one in a currently planned non-destructive Avatar Modification Utils.</description></item><item><title/><link>https://vpm.anatawa12.com/avatar-optimizer/404.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vpm.anatawa12.com/avatar-optimizer/404.html</guid><description/></item><item><title>Asset Description</title><link>https://vpm.anatawa12.com/avatar-optimizer/en/docs/developers/asset-description/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vpm.anatawa12.com/avatar-optimizer/en/docs/developers/asset-description/</guid><description>Asset Description # Asset Description is the file to provide information of your assets for Avatar Optimizer.
Why Asset Description is needed # Avatar Optimizer uses information from Asset Description to not excessively optimize user&amp;rsquo;s avatar.
Current Asset Description can provide the following information:
Meaningless Components
Components that should be ignored by Avatar Optimizer. Parameters Read By External Tools
Parameters that can be read by external tools, especially for OSC Tools.</description></item><item><title>Basic Usage</title><link>https://vpm.anatawa12.com/avatar-optimizer/en/docs/tutorial/basic-usage/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vpm.anatawa12.com/avatar-optimizer/en/docs/tutorial/basic-usage/</guid><description>Basic Usage # Use Automatic Optimization # There are several optimizations which can be performed automatically for Avatars.
Removing Unused BlendShapes(Shape Keys)1 For BlendShapes with non-zero weight, freezing BlendShapes will reduce processing cost. Even if the weight is zero, removing BlendShapes will reduce the size of avatars. Removing unused Behaviours such as PhysBones If there are enabled PhysBones which do not need to be swayed (e.g., the swaying target mesh2 is always disabled), extra computational cost is caused.</description></item><item><title>Component Scripting API</title><link>https://vpm.anatawa12.com/avatar-optimizer/en/docs/developers/component-api/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vpm.anatawa12.com/avatar-optimizer/en/docs/developers/component-api/</guid><description>Component Scripting API # Since Avatar Optimizer v1.7.0, Avatar Optimizer provides Component API to add Avatar Optimizer components to the Avatar. By using this API, you can create tools or components that add Avatar Optimizer components.
Components that supported by Component API # Currently, not all components are supported by Component API. Here is the list of components that are supported by Component API.
RemoveMeshInBox - Adding component and configuring for that is supported RemoveMeshByBlendShape - Adding component and configuring for that is supported TraceAndOptimize - Adding with default configuration is supported but configuring is not supported For components that supports configuring, to keep compatibility with future features that enabled by default, you need extra attention for the configuration.</description></item><item><title>Distributing Prefabs</title><link>https://vpm.anatawa12.com/avatar-optimizer/en/docs/developers/distributing-prefabs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vpm.anatawa12.com/avatar-optimizer/en/docs/developers/distributing-prefabs/</guid><description>Distributing Prefabs # Avatar Optimizer mey help you making your assets lightweight and optimized. Here are some recommendations for how to distribute prefabs that depend on Avatar Optimizer.
Guide your users to the official distribution of Avatar Optimizer # Since Avatar Optimizer is published under MIT License, redistribution is allowed. However, I strongly recommend you to guide your users to the official distribution of Avatar Optimizer.
Your unofficial distribution of Avatar Optimizer may be outdated.</description></item><item><title>Make your components compatible with Avatar Optimizer</title><link>https://vpm.anatawa12.com/avatar-optimizer/en/docs/developers/make-your-components-compatible-with-aao/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vpm.anatawa12.com/avatar-optimizer/en/docs/developers/make-your-components-compatible-with-aao/</guid><description>Make your components compatible with Avatar Optimizer # This page describes the following two things.
When can components be incompatible with Avatar Optimizer? How to improve the compatibility? If you have some question, please feel free to ask on Fediverse (Misskey / Mastodon) or NDMF Discord.
When can components be incompatible with Avatar Optimizer? # If your components are on the avatar and still exist when Avatar Optimizer processes it, your components can be incompatible with Avatar Optimizer.</description></item></channel></rss>